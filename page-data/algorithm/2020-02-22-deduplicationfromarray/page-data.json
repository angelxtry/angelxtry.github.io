{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/2020-02-22-deduplicationfromarray/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"7104f866-53a9-56d1-a7e2-cd46c9587d77","excerpt":"JavaScript 코딩 테스트 문제를 풀다가 한번은 정리하고 넘어가야 할 것 같아서 적어본다. 참고 글: [Javascript] array 중복 제거하는 방법(ES6) 내가 가장 많이 사용하는 방법은 을 이용한 방법이다. 이것 외에 위의 글에서 설명하는 방법은 와 를 이용한 방법이다. 직접 테스트 해보지는 않았지만 for loop이나 object를 이용하여 중복을 제거하는 것보다 filter가 빠르다고 한다. Set은 브라우저 별로 다를 수 있다고 하니 앞으로는 를 쓰도록 하자.","html":"<p>JavaScript 코딩 테스트 문제를 풀다가 한번은 정리하고 넘어가야 할 것 같아서 적어본다.</p>\n<p>참고 글: <a href=\"https://medium.com/@Dongmin_Jang/javascript-array-%EC%A4%91%EB%B3%B5-%EC%A0%9C%EA%B1%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-es6-b5b9075361f9\">[Javascript] array 중복 제거하는 방법(ES6)</a></p>\n<p>내가 가장 많이 사용하는 방법은 <code class=\"language-text\">Set</code>을 이용한 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이것 외에 위의 글에서 설명하는 방법은 <code class=\"language-text\">filter</code>와 <code class=\"language-text\">reduce</code>를 이용한 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> array<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  array<span class=\"token punctuation\">.</span>reduce<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> acc <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>acc<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>직접 테스트 해보지는 않았지만 for loop이나 object를 이용하여 중복을 제거하는 것보다 filter가 빠르다고 한다.</p>\n<p>Set은 브라우저 별로 다를 수 있다고 하니 앞으로는 <code class=\"language-text\">filter</code>를 쓰도록 하자.</p>","frontmatter":{"title":"Array에서 중복 제거","date":"February 22, 2020"}}},"pageContext":{"slug":"/algorithm/2020-02-22-deduplicationfromarray/","previous":{"fields":{"slug":"/algorithm/2020-02-22-descendingorder/"},"frontmatter":{"title":"문자열의 문자를 내림차순으로 정렬하기","category":"algorithm"}},"next":{"fields":{"slug":"/development/2020-02-26-consoletipandvscodsnippet/"},"frontmatter":{"title":"console tip & VS Code snippet 추가하기","category":"development"}}}}}