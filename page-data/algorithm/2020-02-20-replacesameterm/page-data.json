{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/2020-02-20-replacesameterm/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"6a9d2faa-9e4f-59c9-8790-9c5f1f3dd288","excerpt":"문제 두 문장이 있다. originalText의 adj를 referText의 adj로 교체해보자. adv도 동일하게 처리한다. 풀이 일단 referText…","html":"<h2 id=\"문제\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>두 문장이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> originalText <span class=\"token operator\">=</span> <span class=\"token string\">'change this [good](adj) sentence [quickly](adv)'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> referText <span class=\"token operator\">=</span> <span class=\"token string\">'[carefully](adv) referring this [short](adj) sentence'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>originalText의 adj를 referText의 adj로 교체해보자. adv도 동일하게 처리한다.</p>\n<h2 id=\"풀이\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h2>\n<p>일단 referText만 보자.</p>\n<p><code class=\"language-text\">(adv)</code> 앞에 있는 <code class=\"language-text\">[carefully]</code>에서 <code class=\"language-text\">carefully</code>만 뽑아내야 한다.</p>\n<h3 id=\"문장에서-code-classlanguage-textblah-blahcode-찾기\"><a href=\"#%EB%AC%B8%EC%9E%A5%EC%97%90%EC%84%9C-code-classlanguage-textblah-blahcode-%EC%B0%BE%EA%B8%B0\" aria-label=\"문장에서 code classlanguage textblah blahcode 찾기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문장에서 <code class=\"language-text\">[blah blah]</code> 찾기</h3>\n<p><code class=\"language-text\">[]</code>안에 임의의 문자열이 포함된 것을 선택하려면 다음과 같이 정규식을 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> re <span class=\"token operator\">=</span> <span class=\"token regex\">/\\[\\w+\\]/</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> referMatch <span class=\"token operator\">=</span> referText<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>referMatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [ '[carefully]',</span>\n<span class=\"token comment\">//   index: 0,</span>\n<span class=\"token comment\">//   input: '[carefully](adv) referring this [short](adj) sentence',</span>\n<span class=\"token comment\">//   groups: undefined ]</span></code></pre></div>\n<p>변수에 정규식을 담기 위해서는 정규식 앞, 뒤로 <code class=\"language-text\">/</code>가 필요하다.</p>\n<p><code class=\"language-text\">[]</code> 같은 대괄호를 표현하려면 <code class=\"language-text\">\\</code> 즉, 역슬래시를 사용한다.</p>\n<p>그리고 <code class=\"language-text\">\\w</code>는 <code class=\"language-text\">_</code>를 포함한 숫자, 문자를 의미한다. <code class=\"language-text\">[A-Za-z0-9_]</code>과 동일하다.</p>\n<p><code class=\"language-text\">\\w</code>에 <code class=\"language-text\">+</code>를 붙여 앞의 표현식이 1회 이상 반복되는 것을 표현했다.</p>\n<p>String의 메서드인 <code class=\"language-text\">match</code>는 정규식을 인자로 받고, 일치하는 문자열이 있다면 배열을, 없다면 null을 반환한다.</p>\n<h3 id=\"code-classlanguage-textblah-blahcode에서-대괄호를-제외하고-문자만-추출\"><a href=\"#code-classlanguage-textblah-blahcode%EC%97%90%EC%84%9C-%EB%8C%80%EA%B4%84%ED%98%B8%EB%A5%BC-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B3%A0-%EB%AC%B8%EC%9E%90%EB%A7%8C-%EC%B6%94%EC%B6%9C\" aria-label=\"code classlanguage textblah blahcode에서 대괄호를 제외하고 문자만 추출 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">[blah blah]</code>에서 대괄호를 제외하고 문자만 추출</h3>\n<p><code class=\"language-text\">[carefully]</code>에서 carefully만 뽑아내 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> re <span class=\"token operator\">=</span> <span class=\"token regex\">/\\[(\\w+)\\]/</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> referMatch <span class=\"token operator\">=</span> referText<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>referMatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [ '[carefully]',</span>\n<span class=\"token comment\">//   'carefully',</span>\n<span class=\"token comment\">//   index: 0,</span>\n<span class=\"token comment\">//   input: '[carefully](adv) referring this [short](adj) sentence',</span>\n<span class=\"token comment\">//   groups: undefined ]</span></code></pre></div>\n<p>match 메서드의 결과 배열의 1번째 항목에 carefully가 포함되었다.</p>\n<p><code class=\"language-text\">()</code>안에 포함된 항목을 결과에 포함시키는 이 소괄호를 capturing parentheses라고 부른다.</p>\n<p>이제 다시 문제를 풀어보자.</p>\n<h2 id=\"다시-문제로\"><a href=\"#%EB%8B%A4%EC%8B%9C-%EB%AC%B8%EC%A0%9C%EB%A1%9C\" aria-label=\"다시 문제로 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다시 문제로</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> replaceSameTerm <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  targetList<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  originalText<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  referText<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\"><span class=\"token builtin\">string</span></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> originalText<span class=\"token punctuation\">;</span>\n  targetList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pattern <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\\\\[(\\\\w+)\\\\]\\\\(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>target<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\\\)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> referMatch <span class=\"token operator\">=</span> referText<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>referMatch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> referMatch<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> originalText <span class=\"token operator\">=</span> <span class=\"token string\">'change this [good](adj) sentence [quickly](adv)'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> referText <span class=\"token operator\">=</span> <span class=\"token string\">'[carefully](adv) referring this [short](adj) sentence'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">replaceSameTerm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'adj'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'adv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> originalText<span class=\"token punctuation\">,</span> referText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// change this short sentence carefully</span></code></pre></div>\n<p>replaceSameTerm이라는 함수는 3개의 인자를 받는다.</p>\n<p>첫 번째 인자가 정규식으로 찾을 대상이다. 하나 이상이 될 수 있으므로 배열로 받는다.</p>\n<p><code class=\"language-text\">RegExp</code>는 생성자 함수다. 인자로 정규식을 전달할 때 <code class=\"language-text\">\\</code>(역슬래시)를 사용하려면 두 개를 연속으로 써야한다. 주의하자.</p>\n<h2 id=\"회고\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h2>\n<p>평소에 정규식이 나오면 외면했었는데, 결국 코딩 테스트에서 이 문제를 만났다. 당연히 못풀었다. ㅠㅠ</p>\n<p>오늘 내일 이틀에 걸쳐서 정규식을 한번 정리해봐야겠다. 앞으로 정규식을 만나면 즐겁게 도전할 수 있도록!</p>\n<h2 id=\"참고-code-classlanguage-textgcode\"><a href=\"#%EC%B0%B8%EA%B3%A0-code-classlanguage-textgcode\" aria-label=\"참고 code classlanguage textgcode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고. <code class=\"language-text\">/g</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> referText <span class=\"token operator\">=</span> <span class=\"token string\">'[carefully](adv) referring this [short](adj) sentence'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> re <span class=\"token operator\">=</span> <span class=\"token regex\">/\\[(\\w+)\\]/g</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> referMatch <span class=\"token operator\">=</span> referText<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>referMatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [ '[carefully]', '[short]' ]</span></code></pre></div>\n<p>정규식에 <code class=\"language-text\">/g</code>가 포함되면 일치하는 구문 하나를 찾고 중단하는 것이 아니라 모든 일치하는 구문을 찾는다.</p>\n<p>그래서 결과가 다르게 나온다.</p>\n<h2 id=\"참고-캡처링-괄호가-2개-이상일-때\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%BA%A1%EC%B2%98%EB%A7%81-%EA%B4%84%ED%98%B8%EA%B0%80-2%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%BC-%EB%95%8C\" aria-label=\"참고 캡처링 괄호가 2개 이상일 때 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고. 캡처링 괄호가 2개 이상일 때</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> referText <span class=\"token operator\">=</span> <span class=\"token string\">'[carefully](adv) referring this [short](adj) sentence'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> re <span class=\"token operator\">=</span> <span class=\"token regex\">/(\\[)(\\w+)(\\])/</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> referMatch <span class=\"token operator\">=</span> referText<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>referMatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [ '[carefully]',</span>\n<span class=\"token comment\">//   '[',</span>\n<span class=\"token comment\">//   'carefully',</span>\n<span class=\"token comment\">//   ']',</span>\n<span class=\"token comment\">//   index: 0,</span>\n<span class=\"token comment\">//   input: '[carefully](adv) referring this [short](adj) sentence',</span>\n<span class=\"token comment\">//   groups: undefined ]</span></code></pre></div>\n<p>Capturing 괄호가 1개 이상일 때 결과 배열에 1부터 n번째까지 해당 결과가 저장된다.</p>","frontmatter":{"title":"같은 품사 교체하기","date":"February 20, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algorithm/2020-02-20-replacesameterm/","previous":{"fields":{"slug":"/til/2020-02-19-til/"},"frontmatter":{"title":"2020-02-19 TIL","category":"til"}},"next":null}}}