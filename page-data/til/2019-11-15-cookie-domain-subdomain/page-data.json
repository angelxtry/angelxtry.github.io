{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2019-11-15-cookie-domain-subdomain/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"a606ba74-cb8d-529a-9acd-ad2267fe03eb","excerpt":"Next.js를 고려하다가 아무 근거 없이 쉽고 편해보여서 서버를 2대 사용하는 프로젝트를 구상했다. 하나는 api 서버, 또 하나는 Next 서버. 각각 최소 기능을 구현한 후 빠르게 aws 서버에 올려서 테스트를 했는데 로컬에서는 잘 동작하던 것들이 대부분 동작하지 않았다. 나중에 알고보니 대부분의 원인이 aws 서버 간의 쿠키 교환이 제대로 이루어지지 않은 것이었다. 서버간의 쿠키 교환 설정을 했던 내용을 간단히 기록한다. 1. aws Route 53에서 domain 설정 하나는 api…","html":"<p>Next.js를 고려하다가 아무 근거 없이 쉽고 편해보여서 서버를 2대 사용하는 프로젝트를 구상했다.</p>\n<p>하나는 api 서버, 또 하나는 Next 서버.</p>\n<p>각각 최소 기능을 구현한 후 빠르게 aws 서버에 올려서 테스트를 했는데 로컬에서는 잘 동작하던 것들이 대부분 동작하지 않았다.</p>\n<p>나중에 알고보니 대부분의 원인이 aws 서버 간의 쿠키 교환이 제대로 이루어지지 않은 것이었다.</p>\n<p>서버간의 쿠키 교환 설정을 했던 내용을 간단히 기록한다.</p>\n<h2 id=\"1-aws-route-53에서-domain-설정\"><a href=\"#1-aws-route-53%EC%97%90%EC%84%9C-domain-%EC%84%A4%EC%A0%95\" aria-label=\"1 aws route 53에서 domain 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. aws Route 53에서 domain 설정</h2>\n<p>하나는 api 서버, 다른 하나는 Next 서버용이다.</p>\n<p>기본적으로 <code class=\"language-text\">Elastic IPs</code>를 이용하여 IP를 하나씩 부여 한 후 <code class=\"language-text\">Route 53</code> 설정으로 간다.</p>\n<p><code class=\"language-text\">Hosted zone</code>에서 domain을 설정한다. 사용할 domain을 doit.com이라고 하자.</p>\n<p><code class=\"language-text\">Create Record Set</code> 버튼을 클릭하여 <code class=\"language-text\">A</code> 타입으로 Next용 서버를 doit.com, api 서버를 api.doit.com이라고 설정한다.</p>\n<h2 id=\"2-api-서버express에서-cors-설정\"><a href=\"#2-api-%EC%84%9C%EB%B2%84express%EC%97%90%EC%84%9C-cors-%EC%84%A4%EC%A0%95\" aria-label=\"2 api 서버express에서 cors 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. api 서버(Express)에서 cors 설정</h2>\n<p>필수적인 코드만 추려보면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cors <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> expressSession <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express-session'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    origin<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    credentials<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">expressSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    resave<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    saveUninitialized<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    secret<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">COOKIE_SECRET</span><span class=\"token punctuation\">,</span>\n    cookie<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      httpOnly<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      secure<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      domain<span class=\"token punctuation\">:</span> <span class=\"token string\">'.doit.com'</span><span class=\"token punctuation\">,</span>\n      maxAge<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'forcebewithyou'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Port </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> app<span class=\"token punctuation\">;</span></code></pre></div>\n<p>가장 중요한 코드는 <code class=\"language-text\">expressSession</code>에서 <code class=\"language-text\">domain: &#39;.doit.com&#39;</code>이다.</p>\n<p>doit.com 앞의 <code class=\"language-text\">.</code>이 꼭 필요하다.</p>\n<p>cors의 <code class=\"language-text\">origin: true</code>와 <code class=\"language-text\">credential: true</code>도 필요하고 https 구성이 되면 origin: true보다 더 구체적인 domain이 적어주는 것이 좋다고 한다.</p>\n<p>이번에 배운 교휸은 이 문제가 해결되지 않았을 때 다른 문제를 해결하려고 시도하면 안된다는 것이다 ㅠㅠ.</p>\n<p>거의 모든 것이 쿠키가 원인이었고, 그 외 부분들도 쿠키가 제대로 설정되어 있지 않으면 정확한 원인을 찾기 힘든 것들이었다.</p>\n<p>이렇게 적어보니 정말 간단하네 ㅋㅋㅋ 재미있었다.</p>\n<p><img src=\"https://drive.google.com/uc?export=view&#x26;id=1xclbKp3dRxvmKDjy0dZ6R8oRTGsOpy6H\" alt=\"Server domain setting\"></p>\n<ul>\n<li>참고 사이트</li>\n</ul>\n<p><a href=\"https://stackoverflow.com/questions/18492576/share-cookie-between-subdomain-and-domain?answertab=votes#tab-top\">Share cookie between subdomain and domain</a></p>","frontmatter":{"title":"AWS 상에서 서버 2대(domain - sub domain)의 쿠키 교환","date":"November 15, 2019"}}},"pageContext":{"slug":"/til/2019-11-15-cookie-domain-subdomain/","previous":{"fields":{"slug":"/development/2019-11-15-cookie-domain-subdomain/"},"frontmatter":{"title":"AWS 상에서 서버 2대(domain - sub domain)의 쿠키 교환","category":"development"}},"next":{"fields":{"slug":"/development/2019-11-22-react-helmet-nextjs/"},"frontmatter":{"title":"Next.js에 react-helmet 적용","category":"development"}}}}}