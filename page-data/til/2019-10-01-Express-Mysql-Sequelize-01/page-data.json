{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2019-10-01-Express-Mysql-Sequelize-01/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"cac6dd70-f525-56e0-8ea6-4cd33cb5bb83","excerpt":", , 를 사용해보자. 제로초님의 인프런 강의를 정리한 글이다. 1. Express Generator로 프로젝트 생성 2. Sequelize 설치 와 도 함께 설치한다. 를 global로 설치하면 터미널에서  command를 실행할 수 있다. 3. Sequelize 초기화 위와 같이 입력하면  관련 폴더 구조와 파일들이 생성된다. 4. models 설정  파일의 내용을 모두 지우고 다시 설정해본다. 4-…","html":"<p><code class=\"language-text\">express</code>, <code class=\"language-text\">mysql</code>, <code class=\"language-text\">sequelize</code>를 사용해보자.</p>\n<p>제로초님의 인프런 강의를 정리한 글이다.</p>\n<h2 id=\"1-express-generator로-프로젝트-생성\"><a href=\"#1-express-generator%EB%A1%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"1 express generator로 프로젝트 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Express Generator로 프로젝트 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">express learn<span class=\"token operator\">-</span>sequelize <span class=\"token operator\">--</span>view<span class=\"token operator\">=</span>pug\ncd learn<span class=\"token operator\">-</span>sequelize\nnpm install</code></pre></div>\n<h2 id=\"2-sequelize-설치\"><a href=\"#2-sequelize-%EC%84%A4%EC%B9%98\" aria-label=\"2 sequelize 설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Sequelize 설치</h2>\n<p><code class=\"language-text\">sequelize</code>와 <code class=\"language-text\">mysql2</code>도 함께 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm i sequelize mysql2\nnpm i <span class=\"token operator\">-</span>g sequelize<span class=\"token operator\">-</span>cli</code></pre></div>\n<p><code class=\"language-text\">sequelize-cli</code>를 global로 설치하면 터미널에서 <code class=\"language-text\">sequelize</code> command를 실행할 수 있다.</p>\n<h2 id=\"3-sequelize-초기화\"><a href=\"#3-sequelize-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-label=\"3 sequelize 초기화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Sequelize 초기화</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">sequelize init</code></pre></div>\n<p>위와 같이 입력하면 <code class=\"language-text\">sequelize</code> 관련 폴더 구조와 파일들이 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">/</span>config<span class=\"token operator\">/</span>config<span class=\"token punctuation\">.</span>json\n<span class=\"token operator\">/</span>models\n<span class=\"token operator\">/</span>migrations\n<span class=\"token operator\">/</span>seeders</code></pre></div>\n<h2 id=\"4-models-설정\"><a href=\"#4-models-%EC%84%A4%EC%A0%95\" aria-label=\"4 models 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. models 설정</h2>\n<p><code class=\"language-text\">/models/index.js</code> 파일의 내용을 모두 지우고 다시 설정해본다.</p>\n<h3 id=\"4-1-기본-설정\"><a href=\"#4-1-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95\" aria-label=\"4 1 기본 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-1. 기본 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">path</code>, <code class=\"language-text\">sequelize</code>를 불어온다.</p>\n<p><code class=\"language-text\">env</code>는 일단 <code class=\"language-text\">development</code>로 설정한다. 실제 운영환경이 되면 <code class=\"language-text\">process.env.NODE_ENV</code>의 값인 <code class=\"language-text\">production</code>으로 적용될 것이다.</p>\n<h3 id=\"4-2-config-정보-불러오기\"><a href=\"#4-2-config-%EC%A0%95%EB%B3%B4-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"4 2 config 정보 불러오기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-2. config 정보 불러오기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../config/config.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">/config/config.json</code> 파일에는 DB 접속정보가 저장되어 있다.</p>\n<p><code class=\"language-text\">config</code> 변수에 해당 파일의 정보 중 <code class=\"language-text\">development</code>의 정보를 불러온다.</p>\n<h3 id=\"4-3-sequelize-인스턴스-생성\"><a href=\"#4-3-sequelize-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"4 3 sequelize 인스턴스 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-3. sequelize 인스턴스 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../config/config.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sequelize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sequelize</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">const app = express();</code>와 같이 <code class=\"language-text\">express</code> 인스턴스를 만들듯이 <code class=\"language-text\">sequelize</code> 인스턴스를 생성한다.</p>\n<h3 id=\"4-4-db-객체-생성\"><a href=\"#4-4-db-%EA%B0%9D%EC%B2%B4-%EC%83%9D%EC%84%B1\" aria-label=\"4 4 db 객체 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-4. db 객체 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../config/config.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sequelize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sequelize</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>Sequelize <span class=\"token operator\">=</span> Sequelize<span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>sequelize <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> db<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">db</code>라는 객체를 하나 생성하여 <code class=\"language-text\">Sequelize</code>와 <code class=\"language-text\">sequelize</code>를 넣어준다.</p>\n<p>그리고 <code class=\"language-text\">db</code>를 export 한다.</p>\n<h2 id=\"5-mysql-설치\"><a href=\"#5-mysql-%EC%84%A4%EC%B9%98\" aria-label=\"5 mysql 설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. mysql 설치</h2>\n<p><code class=\"language-text\">mysql</code>은 5.7.27을 설치했다.</p>\n<h2 id=\"6-sequelize-cli로-database-생성\"><a href=\"#6-sequelize-cli%EB%A1%9C-database-%EC%83%9D%EC%84%B1\" aria-label=\"6 sequelize cli로 database 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. sequelize cli로 database 생성</h2>\n<p><code class=\"language-text\">/config/config.json</code> 파일을 수정한다.</p>\n<p><code class=\"language-text\">development</code>의 <code class=\"language-text\">username</code>, <code class=\"language-text\">password</code>, <code class=\"language-text\">database</code>등을 설정한다.</p>\n<p>터미널에서 다음과 같이 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">sequelize db<span class=\"token punctuation\">:</span>create</code></pre></div>\n<p><code class=\"language-text\">Database nodejs created.</code> 메시지가 출력된다.</p>\n<h2 id=\"7-model-추가\"><a href=\"#7-model-%EC%B6%94%EA%B0%80\" aria-label=\"7 model 추가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. model 추가</h2>\n<h3 id=\"7-1-테이블-별-파일-생성-indexjs와-연결\"><a href=\"#7-1-%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%B3%84-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-indexjs%EC%99%80-%EC%97%B0%EA%B2%B0\" aria-label=\"7 1 테이블 별 파일 생성 indexjs와 연결 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7-1. 테이블 별 파일 생성, index.js와 연결</h3>\n<p><code class=\"language-text\">/models</code> 폴더에 <code class=\"language-text\">user.js</code>, <code class=\"language-text\">comment.js</code> 파일을 추가한다.</p>\n<p>먼저 <code class=\"language-text\">user.js</code> 부터 만들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 <code class=\"language-text\">user</code>라는 테이블이 생성된다.</p>\n<p><code class=\"language-text\">comment.js</code>도 동일하게 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comment\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 두 파일을 <code class=\"language-text\">/models/index.js</code>에서 불러온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../config/config.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sequelize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sequelize</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>Sequelize <span class=\"token operator\">=</span> Sequelize<span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>sequelize <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sequelize<span class=\"token punctuation\">,</span> Sequelize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>Comment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./comment\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sequelize<span class=\"token punctuation\">,</span> Sequelize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> db<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">require</code>문으로 파일을 불러오면서 동시에 <code class=\"language-text\">sequelize</code>, <code class=\"language-text\">Sequelize</code>를 전달했다.</p>\n<p>이 param들은 <code class=\"language-text\">user.js</code>의 <code class=\"language-text\">sequelize</code>와 <code class=\"language-text\">DataTypes</code>와 연결된다.</p>\n<h3 id=\"7-2-테이블-컬럼-구조-만들기\"><a href=\"#7-2-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%BB%AC%EB%9F%BC-%EA%B5%AC%EC%A1%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"7 2 테이블 컬럼 구조 만들기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7-2. 테이블 컬럼 구조 만들기</h3>\n<p><code class=\"language-text\">user.js</code>를 계속 진행해보자.</p>\n<p><code class=\"language-text\">user</code>테이블에 추가될 컬럼은 이름, 나이, 결혼여부, 자기소개, 가입일 이다.</p>\n<p><code class=\"language-text\">user.js</code> 파일에 내용을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    married<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    comment<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    created_at<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    timestamps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>일단 각 컬럼들을 정의할 준비를 해두었고 <code class=\"language-text\">sequelize.define()</code>의 세 번째 param을 추가했다.</p>\n<p>세 번째 param의 <code class=\"language-text\">timestamps: false</code>는 <code class=\"language-text\">user</code> 테이블에 데이터가 insert 될 때마다 자동으로 time stamp를 입력하는 것을 false 처리 한 것이다.</p>\n<p>세 번째 param에 <code class=\"language-text\">underscored: true</code>같은 항목을 추가할 수 있다.</p>\n<p>이 구문의 컬럼명에 <code class=\"language-text\">_</code> 사용 여부를 의미한다.</p>\n<p><code class=\"language-text\">comment</code> 테이블은 작성자, 댓글내용, 작성일 컬럼을 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comment\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    commenter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    comment<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    created_at<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    timestamps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    underscored<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"7-3-테이블-컬럼-상세-정의\"><a href=\"#7-3-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%BB%AC%EB%9F%BC-%EC%83%81%EC%84%B8-%EC%A0%95%EC%9D%98\" aria-label=\"7 3 테이블 컬럼 상세 정의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7-3. 테이블 컬럼 상세 정의</h3>\n<p><code class=\"language-text\">user</code> 테이블 부터 작성해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      allowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      unique<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">INTEGER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNSIGNED</span><span class=\"token punctuation\">,</span>\n      allowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    married<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">BOOLEAN</span><span class=\"token punctuation\">,</span>\n      allowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    comment<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXT</span><span class=\"token punctuation\">,</span>\n      allowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    created_at<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE</span><span class=\"token punctuation\">,</span>\n      allowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      defaultValue<span class=\"token punctuation\">:</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">literal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"now()\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    timestamps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    underscored<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">comment</code> 테이블도 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comment\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    commenter<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    comment<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      allowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    created_at<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE</span><span class=\"token punctuation\">,</span>\n      aloowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      defaultValue<span class=\"token punctuation\">:</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">literal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"now()\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    timestamps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    underscored<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">commenter</code>는 추후에 다시 설정할 것이기에 일단 미완성으로 둔다.</p>\n<h3 id=\"7-4-테이블-간-관계-설정\"><a href=\"#7-4-%ED%85%8C%EC%9D%B4%EB%B8%94-%EA%B0%84-%EA%B4%80%EA%B3%84-%EC%84%A4%EC%A0%95\" aria-label=\"7 4 테이블 간 관계 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7-4. 테이블 간 관계 설정</h3>\n<p><code class=\"language-text\">comment</code> 테이블의 <code class=\"language-text\">commenter</code> 컬럼의 정의를 비워두었다.</p>\n<p><code class=\"language-text\">commenter</code>는 <code class=\"language-text\">user</code>테이블의 <code class=\"language-text\">name</code>과 연결된다.</p>\n<p><code class=\"language-text\">user</code>와 <code class=\"language-text\">comment</code>의 관계는 <code class=\"language-text\">1:N</code>이다.</p>\n<p><code class=\"language-text\">index.js</code> 파일에서 이 관계를 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../config/config.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sequelize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sequelize</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\ndb<span class=\"token punctuation\">.</span>Sequelize <span class=\"token operator\">=</span> Sequelize<span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>sequelize <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sequelize<span class=\"token punctuation\">,</span> Sequelize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>Comment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./comment\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sequelize<span class=\"token punctuation\">,</span> Sequelize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">.</span><span class=\"token function\">hasMany</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Comment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>Comment<span class=\"token punctuation\">.</span><span class=\"token function\">belongsTo</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> db<span class=\"token punctuation\">;</span></code></pre></div>\n<p>코드 그대로 살펴보면 <code class=\"language-text\">user</code>는 다수의 <code class=\"language-text\">comment</code>를 가지고 있고, <code class=\"language-text\">comment</code>는 하나의 <code class=\"language-text\">user</code>를 가진다는 것을 의미한다.</p>\n<p>추가로 더 작성 해야만 하는 것들이 있다.</p>\n<p>다음의 코드를 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../config/config.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sequelize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sequelize</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>Sequelize <span class=\"token operator\">=</span> Sequelize<span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>sequelize <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sequelize<span class=\"token punctuation\">,</span> Sequelize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>Comment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./comment\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>sequelize<span class=\"token punctuation\">,</span> Sequelize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">.</span><span class=\"token function\">hasMany</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Comment<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> foreignKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"commenter\"</span><span class=\"token punctuation\">,</span> soruceKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"id\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>Comment<span class=\"token punctuation\">.</span><span class=\"token function\">belongsTo</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> foreignKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"commenter\"</span><span class=\"token punctuation\">,</span> targetKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"id\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> db<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">User</code>와 <code class=\"language-text\">Comment</code> 사이의 관계를 상세하게 정의한다.</p>\n<p><code class=\"language-text\">Comment</code>에 속하는 <code class=\"language-text\">commenter</code>라는 컬럼은 <code class=\"language-text\">foreginKey</code>로 설정하고, 연결되는 <code class=\"language-text\">User</code>의 컬럼은 <code class=\"language-text\">id</code>다.</p>\n<p><code class=\"language-text\">User</code>에서 <code class=\"language-text\">id</code>는 명시하지 않았지만 자동으로 생성되는 key다.</p>\n<p><code class=\"language-text\">db.Comment.belongsTo</code>에서는 <code class=\"language-text\">soruceKey</code>가 아니라 <code class=\"language-text\">targetKey</code>를 명시한다.</p>\n<p>컬럼명은 동일하고 <code class=\"language-text\">foreginKey</code>에는 <code class=\"language-text\">belongsTo</code> 항목의 컬럼을 적는다.</p>\n<p><code class=\"language-text\">sourceKey</code>, <code class=\"language-text\">targetKey</code>도 동일한 컬럼명을 명시하고 <code class=\"language-text\">hasMany</code> 항목의 컬럼을 적는다.</p>\n<p>이렇게 설정했다면 <code class=\"language-text\">Comment.js</code> 파일에서 <code class=\"language-text\">commenter</code> 컬럼을 삭제한다. 삭제해도 관계에 설정이 되어 있어 자동으로 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comment\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    comment<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      allowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    created_at<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE</span><span class=\"token punctuation\">,</span>\n      aloowNull<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      defaultValue<span class=\"token punctuation\">:</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">literal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"now()\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    timestamps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    underscored<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"8-appjs에-sequelize-연결\"><a href=\"#8-appjs%EC%97%90-sequelize-%EC%97%B0%EA%B2%B0\" aria-label=\"8 appjs에 sequelize 연결 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. app.js에 sequelize 연결</h2>\n<p><code class=\"language-text\">app.js</code> 파일에 <code class=\"language-text\">sequelize</code>를 연결한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> sequelize <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./models\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsequelize<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 <code class=\"language-text\">npm start</code>로 서버를 실행하면 자동으로 테이블이 생성된다.</p>\n<h2 id=\"9-배운-것\"><a href=\"#9-%EB%B0%B0%EC%9A%B4-%EA%B2%83\" aria-label=\"9 배운 것 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 배운 것</h2>\n<p><code class=\"language-text\">express</code>에서 <code class=\"language-text\">sequelize</code>를 설정하는 법을 확인했다.</p>\n<p>이제 빈 폴더에서 <code class=\"language-text\">npm init</code> 부터 시작한다고 해도 <code class=\"language-text\">mysql</code>과 <code class=\"language-text\">sequelize</code>를 사용할 수 있게 됐다.</p>\n<p><code class=\"language-text\">sequelize</code>에서 <code class=\"language-text\">1:N</code> 구조를 설정하고 방법도 확인했다.</p>\n<p><code class=\"language-text\">sequelize</code>로 데이터를 사용하는 것은 다음 글에서 확인해보자.</p>\n<p>(다음 편에 계속)</p>","frontmatter":{"title":"[Node.js] Express, Mysql, Sequelize #1","date":"October 01, 2019"}}},"pageContext":{"slug":"/til/2019-10-01-Express-Mysql-Sequelize-01/","previous":{"fields":{"slug":"/til/2019-09-25-Express-Intro-01/"},"frontmatter":{"title":"[Node.js] Express Intro - 1","category":"TIL"}},"next":{"fields":{"slug":"/til/2019-10-02-Express-Mysql-Sequelize-02/"},"frontmatter":{"title":"[Node.js] Express, Mysql, Sequelize #2","category":"TIL"}}}}}