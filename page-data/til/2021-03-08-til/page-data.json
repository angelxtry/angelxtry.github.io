{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2021-03-08-til/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://blog.doitreviews.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d81379a7-23ea-5568-a1eb-e2137e89c5b0","excerpt":"일시적으로 회사 업무의 변동이 있었습니다. 그래서 프론트 개발은 잠시 미뤄두고 airflow를 사용한 데이터 처리를 시도하고 있습니다. 평소에 자주 들었던 airflow를 처음 사용해봤습니다. 생소한 용어가 많이 처음에는 살짝 혼란스러웠지만 익숙해지니 매우 직관적이고 간단하게 script만 작성하면 쉽게 사용할 수 있었습니다. 오늘은 가볍게 dag를 생성하고 몇 가지 operator를 사용해봤습니다. task를 병렬로 실행할 수도 있습니다. sqlite로는 task…","html":"<p>일시적으로 회사 업무의 변동이 있었습니다. 그래서 프론트 개발은 잠시 미뤄두고 airflow를 사용한 데이터 처리를 시도하고 있습니다.</p>\n<p>평소에 자주 들었던 airflow를 처음 사용해봤습니다.</p>\n<p>생소한 용어가 많이 처음에는 살짝 혼란스러웠지만 익숙해지니 매우 직관적이고 간단하게 script만 작성하면 쉽게 사용할 수 있었습니다.</p>\n<p>오늘은 가볍게 dag를 생성하고 몇 가지 operator를 사용해봤습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> airflow<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> DAG\n<span class=\"token keyword\">from</span> airflow<span class=\"token punctuation\">.</span>operators<span class=\"token punctuation\">.</span>mysql_operator <span class=\"token keyword\">import</span> MySqlOperator\n<span class=\"token keyword\">from</span> airflow<span class=\"token punctuation\">.</span>providers<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>sensors<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpSensor\n<span class=\"token keyword\">from</span> airflow<span class=\"token punctuation\">.</span>providers<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>operators<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> SimpleHttpOperator\n<span class=\"token keyword\">from</span> airflow<span class=\"token punctuation\">.</span>operators<span class=\"token punctuation\">.</span>python <span class=\"token keyword\">import</span> PythonOperator\n\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">from</span> sqlalchemy <span class=\"token keyword\">import</span> create_engine\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndefault_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'start_date'</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">_processing_user</span><span class=\"token punctuation\">(</span>ti<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    users <span class=\"token operator\">=</span> ti<span class=\"token punctuation\">.</span>xcom_pull<span class=\"token punctuation\">(</span>task_ids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'extracting_user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token string\">'results'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">'User is empty'</span><span class=\"token punctuation\">)</span>\n    user <span class=\"token operator\">=</span> users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'results'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    processed_user <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>json_normalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'firstname'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'lastname'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'last'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'country'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'location'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'country'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    processed_user<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/processed_user.csv'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">_csvToSql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        engine <span class=\"token operator\">=</span> create_engine<span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql+pymysql://{user}:{password}@{host}/{database}\"</span>\n                               <span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>user<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">\"external_raw_data_mysql_user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                       password<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">\"external_raw_data_mysql_password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                       host<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">\"external_raw_data_mysql_host\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                       database<span class=\"token operator\">=</span><span class=\"token string\">\"airflow_test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                               encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n        conn <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot connect.'</span><span class=\"token punctuation\">)</span>\n\n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/processed_user.csv'</span><span class=\"token punctuation\">,</span>\n                     names<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'firstname'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lastname'</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token string\">'country'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>to_sql<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> con<span class=\"token operator\">=</span>engine<span class=\"token punctuation\">,</span> if_exists<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Read .csv and written to the MySQL database'</span>\n\n\n<span class=\"token keyword\">with</span> DAG<span class=\"token punctuation\">(</span><span class=\"token string\">'user_processing'</span><span class=\"token punctuation\">,</span> schedule_interval<span class=\"token operator\">=</span><span class=\"token string\">'@daily'</span><span class=\"token punctuation\">,</span>\n         default_args<span class=\"token operator\">=</span>default_args<span class=\"token punctuation\">,</span>\n         catchup<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dag<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># define tasks/operators</span>\n    create_table <span class=\"token operator\">=</span> MySqlOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'creating_table'</span><span class=\"token punctuation\">,</span>\n        mysql_conn_id<span class=\"token operator\">=</span><span class=\"token string\">'local_mysql_default'</span><span class=\"token punctuation\">,</span>\n        sql<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">'''\n            CREATE TABLE IF NOT EXISTS users (\n                email VARCHAR(255) NOT NULL,\n                firstname TEXT NOT NULL,\n                lastname TEXT NOT NULL,\n                country TEXT NOT NULL,\n                username TEXT NOT NULL,\n                password TEXT NOT NULL,\n                PRIMARY KEY (email)\n            );\n        '''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    is_api_available <span class=\"token operator\">=</span> HttpSensor<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'is_api_available'</span><span class=\"token punctuation\">,</span>\n        http_conn_id<span class=\"token operator\">=</span><span class=\"token string\">'user_api'</span><span class=\"token punctuation\">,</span>\n        endpoint<span class=\"token operator\">=</span><span class=\"token string\">'api/'</span>\n    <span class=\"token punctuation\">)</span>\n\n    extracting_user <span class=\"token operator\">=</span> SimpleHttpOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'extracting_user'</span><span class=\"token punctuation\">,</span>\n        http_conn_id<span class=\"token operator\">=</span><span class=\"token string\">'user_api'</span><span class=\"token punctuation\">,</span>\n        endpoint<span class=\"token operator\">=</span><span class=\"token string\">'api/'</span><span class=\"token punctuation\">,</span>\n        method<span class=\"token operator\">=</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n        response_filter<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> response<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        log_response<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>\n    <span class=\"token punctuation\">)</span>\n\n    processing_user <span class=\"token operator\">=</span> PythonOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'processing_user'</span><span class=\"token punctuation\">,</span>\n        python_callable<span class=\"token operator\">=</span>_processing_user\n    <span class=\"token punctuation\">)</span>\n\n    storing_user <span class=\"token operator\">=</span> PythonOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'storing_user'</span><span class=\"token punctuation\">,</span>\n        python_callable<span class=\"token operator\">=</span>_csvToSql\n    <span class=\"token punctuation\">)</span>\n\ncreate_table <span class=\"token operator\">>></span> is_api_available <span class=\"token operator\">>></span> extracting_user <span class=\"token operator\">>></span> processing_user <span class=\"token operator\">>></span> storing_user</code></pre></div>\n<p>task를 병렬로 실행할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> airflow <span class=\"token keyword\">import</span> DAG\n<span class=\"token keyword\">from</span> airflow<span class=\"token punctuation\">.</span>operators<span class=\"token punctuation\">.</span>bash <span class=\"token keyword\">import</span> BashOperator\n\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\ndefault_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'start_date'</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">with</span> DAG<span class=\"token punctuation\">(</span><span class=\"token string\">'parallel_dag'</span><span class=\"token punctuation\">,</span> schedule_interval<span class=\"token operator\">=</span><span class=\"token string\">'@daily'</span><span class=\"token punctuation\">,</span> default_args<span class=\"token operator\">=</span>default_args<span class=\"token punctuation\">,</span> catchup<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dag<span class=\"token punctuation\">:</span>\n\n    task_1 <span class=\"token operator\">=</span> BashOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'task_1'</span><span class=\"token punctuation\">,</span>\n        bash_command<span class=\"token operator\">=</span><span class=\"token string\">'sleep 3'</span>\n    <span class=\"token punctuation\">)</span>\n\n    task_2 <span class=\"token operator\">=</span> BashOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'task_2'</span><span class=\"token punctuation\">,</span>\n        bash_command<span class=\"token operator\">=</span><span class=\"token string\">'sleep 3'</span>\n    <span class=\"token punctuation\">)</span>\n\n    task_3 <span class=\"token operator\">=</span> BashOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'task_3'</span><span class=\"token punctuation\">,</span>\n        bash_command<span class=\"token operator\">=</span><span class=\"token string\">'sleep 3'</span>\n    <span class=\"token punctuation\">)</span>\n\n    task_4 <span class=\"token operator\">=</span> BashOperator<span class=\"token punctuation\">(</span>\n        task_id<span class=\"token operator\">=</span><span class=\"token string\">'task_4'</span><span class=\"token punctuation\">,</span>\n        bash_command<span class=\"token operator\">=</span><span class=\"token string\">'sleep 3'</span>\n    <span class=\"token punctuation\">)</span>\n\n    task_1 <span class=\"token operator\">>></span> <span class=\"token punctuation\">[</span>task_2<span class=\"token punctuation\">,</span> task_3<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> task_4</code></pre></div>\n<p>sqlite로는 task를 병렬로 실행할 수 없습니다. 그래서 MySQL이나 Postgres 같은 DB가 필요합니다.</p>\n<p>이번 테스트에는 MySQL을 사용했습니다.</p>\n<p>pip로 관련 package를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">pip install <span class=\"token string\">'apache-airflow[mysql]'</span></code></pre></div>\n<p>airflow.cfg에서 sql<em>clchemy</em>conn, executor를 수정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">sql_alchemy_conn <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span><span class=\"token punctuation\">[</span>DB_USER<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>DB_PASSWORD<span class=\"token punctuation\">]</span>@<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3306</span><span class=\"token operator\">/</span><span class=\"token punctuation\">[</span>DB_DATABASE<span class=\"token punctuation\">]</span>\n\nexecutor <span class=\"token operator\">=</span> LocalExecutor</code></pre></div>\n<p>connector를 수정했다면 <code class=\"language-text\">airflow db init</code> 을 다시 실행해야 합니다.</p>\n<p>executor를 수정했다면 <code class=\"language-text\">airflow scheduler</code> 를 다시 실행해야 합니다.</p>\n<p>내일은 오늘 한 실습을 토대로 DB to DB ETL 작업을 시도할 예정입니다.</p>","frontmatter":{"title":"2021-03-08 TIL","date":"March 08, 2021"}}},"pageContext":{"slug":"/til/2021-03-08-til/","previous":{"fields":{"slug":"/til/2021-02-15-til/"},"frontmatter":{"title":"2021-02-15 TIL","category":"til"}},"next":{"fields":{"slug":"/til/2021-03-10-til/"},"frontmatter":{"title":"2021-03-10 TIL","category":"til"}}}},"staticQueryHashes":["1763525275","3128451518"]}