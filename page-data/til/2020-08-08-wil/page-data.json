{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2020-08-08-wil/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"421e5bcf-fd8f-58b2-a0a9-0a184e1ba788","excerpt":"시간을 쪼개서 그날 한 일을 정리하고, 모르는 것을 찾아보는데 시간을 적당히 사용하지 못하고 있다. 분발해야지. React 1. StrictMode에서 두 번 렌더링 React에 redux 설정을 하고 첫 테스트를 하는 과정에서 페이지가 두 번씩 렌더링되는 증상을 발견했다. 처음에는 redux 설정이나 hook을 잘 못 사용한 것이 아닌지 꼼꼼하게 검토해봤는데 이상한 점을 찾을 수 없었다. 원인을 찾기 위해 검색하다보니 공식 페이지에서 원인을 발견했다. https://ko.reactjs.org…","html":"<p>시간을 쪼개서 그날 한 일을 정리하고, 모르는 것을 찾아보는데 시간을 적당히 사용하지 못하고 있다. 분발해야지.</p>\n<h2 id=\"react\" style=\"position:relative;\"><a href=\"#react\" aria-label=\"react permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React</h2>\n<h3 id=\"1-strictmode에서-두-번-렌더링\" style=\"position:relative;\"><a href=\"#1-strictmode%EC%97%90%EC%84%9C-%EB%91%90-%EB%B2%88-%EB%A0%8C%EB%8D%94%EB%A7%81\" aria-label=\"1 strictmode에서 두 번 렌더링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. StrictMode에서 두 번 렌더링</h3>\n<p>React에 redux 설정을 하고 첫 테스트를 하는 과정에서 페이지가 두 번씩 렌더링되는 증상을 발견했다.</p>\n<p>처음에는 redux 설정이나 hook을 잘 못 사용한 것이 아닌지 꼼꼼하게 검토해봤는데 이상한 점을 찾을 수 없었다.</p>\n<p>원인을 찾기 위해 검색하다보니 공식 페이지에서 원인을 발견했다.</p>\n<p><a href=\"https://ko.reactjs.org/docs/strict-mode.html\">https://ko.reactjs.org/docs/strict-mode.html</a></p>\n<blockquote>\n<p>위의 메서드들은 여러 번 호출될 수 있기 때문에, 부작용을 포함하지 않는 것이 중요합니다. 이 규칙을 무시할 경우, 메모리 누수 혹은 잘못된 애플리케이션 상태 등 다양한 문제를 일으킬 가능성이 있습니다. 불행히도, 보통 이러한 문제들은 예측한 대로 동작하지 않기 때문에 발견하는 것이 어려울 수 있습니다.</p>\n<p>Strict 모드가 자동으로 부작용을 찾아주는 것은 불가능합니다. 하지만, 조금 더 예측할 수 있게끔 만들어서 문제가 되는 부분을 발견할 수 있게 도와줍니다. 이는 아래의 함수를 의도적으로 이중으로 호출하여 찾을 수 있습니다.</p>\n<ul>\n<li>클래스 컴포넌트의 constructor, render 그리고 shouldComponentUpdate 메서드</li>\n<li>클래스 컴포넌트의 getDerivedStateFromProps static 메서드</li>\n<li>함수 컴포넌트 바디</li>\n<li>State updater 함수 (setState의 첫 번째 인자)</li>\n<li>useState, useMemo 그리고 useReducer에 전달되는 함수</li>\n</ul>\n</blockquote>\n<p>StricMode가 설정되어 있었고, 제거했을 때 렌더링이 한 번만 되는 것을 확인했다.</p>\n<p>development 모드에서만 적용되고, production 모드에서는 두 번 호출되지 않는다고 하니 안심하고 사용하자.</p>\n<h3 id=\"2-render-warning---useeffect로-해결\" style=\"position:relative;\"><a href=\"#2-render-warning---useeffect%EB%A1%9C-%ED%95%B4%EA%B2%B0\" aria-label=\"2 render warning   useeffect로 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. render warning -> useEffect로 해결</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Warning: Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.</code></pre></div>\n<p>위와 같은 warning이 발생했을 때 평소에 못 보던 warning이라 순간 당황했다.</p>\n<p>warning이 발생한 코드는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RouteComponentProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useLogin <span class=\"token keyword\">from</span> <span class=\"token string\">'./hooks/useLogin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Main <span class=\"token keyword\">from</span> <span class=\"token string\">'./Main'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ROUTES</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">MainContainer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> RouteComponentProps</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token punctuation\">,</span> loading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>loading <span class=\"token operator\">&amp;&amp;</span> isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROUTES</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ADDITIONAL_INFO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>isLoggedIn <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Main</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>코드만 봐도 바로 이상한 것을 발견하는 분도 계시겠지만, 원인을 찾지 못해서 한참 고생을 했다.</p>\n<p>위 코드를 다음과 같이 수정하여 해결했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RouteComponentProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useLogin <span class=\"token keyword\">from</span> <span class=\"token string\">'./hooks/useLogin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Main <span class=\"token keyword\">from</span> <span class=\"token string\">'./Main'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ROUTES</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">MainContainer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> RouteComponentProps</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token punctuation\">,</span> loading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>loading <span class=\"token operator\">&amp;&amp;</span> isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROUTES</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ADDITIONAL_INFO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>loading<span class=\"token punctuation\">,</span> isLoggedIn<span class=\"token punctuation\">,</span> history<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>isLoggedIn <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Main</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>loading, isLoggedIn state의 변화가 있을 때 history.push를 이용하여 page 전환을 시도했다.</p>\n<p>이것을 useEffect 등을 이용하지 않고 직접 시도한 것이 문제의 원인이었다.</p>\n<p>이전에는 이런 코드를 작성하지 않아서 warning을 못 만났던 것 같은데 이번엔 왜 그랬을까.</p>\n<h3 id=\"3-axios-default-설정\" style=\"position:relative;\"><a href=\"#3-axios-default-%EC%84%A4%EC%A0%95\" aria-label=\"3 axios default 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. axios default 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> getTokenFromLocalStroage <span class=\"token keyword\">from</span> <span class=\"token string\">'./utils/getTokenFromLocalStroage'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ROUTES</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./routes'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> setTokenInHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\"><span class=\"token keyword\">void</span></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token function\">getTokenFromLocalStroage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  axios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>Authorization <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setTokenInHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\naxios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>baseURL <span class=\"token operator\">=</span> <span class=\"token string\">'http://localhost:3030/'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>서버에서 token을 받아 로컬 스토리지에 저장하고 header에 실어서 서버에 보내기로 정했다.</p>\n<p>그래서 axios에 위와 같이 default 설정을 했다.</p>\n<p>page를 reload하면 token이 사라지는 경우가 있어 setTokenInHeader를 함수로 만들고 필요할 때 마다 호출하도록 했다.</p>\n<h2 id=\"html-css\" style=\"position:relative;\"><a href=\"#html-css\" aria-label=\"html css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML CSS</h2>\n<h3 id=\"1-반투명한-header에-가려지는-element가-header에-비쳐보일-때\" style=\"position:relative;\"><a href=\"#1-%EB%B0%98%ED%88%AC%EB%AA%85%ED%95%9C-header%EC%97%90-%EA%B0%80%EB%A0%A4%EC%A7%80%EB%8A%94-element%EA%B0%80-header%EC%97%90-%EB%B9%84%EC%B3%90%EB%B3%B4%EC%9D%BC-%EB%95%8C\" aria-label=\"1 반투명한 header에 가려지는 element가 header에 비쳐보일 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 반투명한 header에 가려지는 element가 header에 비쳐보일 때</h3>\n<p>반투명한 header에 가려지는 element에 position: relative를 설정하면 header에 element가 비쳐보인다.</p>\n<p>이것을 해결하려면 해당 element의 z-index를 header보다 낮게 설정하면 된다.</p>\n<h2 id=\"android\" style=\"position:relative;\"><a href=\"#android\" aria-label=\"android permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Android</h2>\n<h3 id=\"1-android-web-view에서-title-영역을-제거\" style=\"position:relative;\"><a href=\"#1-android-web-view%EC%97%90%EC%84%9C-title-%EC%98%81%EC%97%AD%EC%9D%84-%EC%A0%9C%EA%B1%B0\" aria-label=\"1 android web view에서 title 영역을 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. android web view에서 title 영역을 제거</h3>\n<p>app > res > value > styles.xml</p>\n<p>windowActionBar false, windowNotitle true를 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- Base application theme. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AppTheme<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Theme.AppCompat.Light.DarkActionBar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- Customize your theme here. --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>item</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>colorPrimary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>@color/colorPrimary<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>item</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>item</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>colorPrimaryDark<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>@color/colorPrimaryDark<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>item</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>item</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>colorAccent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>@color/colorAccent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>item</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>item</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>windowActionBar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>item</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>item</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>windowNoTitle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>item</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"etc\" style=\"position:relative;\"><a href=\"#etc\" aria-label=\"etc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ETC</h2>\n<h3 id=\"1-hammerspoon을-이용한-key-binding-성공\" style=\"position:relative;\"><a href=\"#1-hammerspoon%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-key-binding-%EC%84%B1%EA%B3%B5\" aria-label=\"1 hammerspoon을 이용한 key binding 성공 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. hammerspoon을 이용한 key binding 성공</h3>\n<p>esc와 한영전환을 키 하나로 처리하는 lua script 작성에 성공했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\">hs<span class=\"token punctuation\">.</span>hotkey<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"ctrl\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"[\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">local</span> inputEnglish <span class=\"token operator\">=</span> <span class=\"token string\">\"com.apple.keylayout.ABC\"</span>\n  <span class=\"token keyword\">local</span> input_source <span class=\"token operator\">=</span> hs<span class=\"token punctuation\">.</span>keycodes<span class=\"token punctuation\">.</span><span class=\"token function\">currentSourceID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>input_source <span class=\"token operator\">==</span> inputEnglish<span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span>\n    hs<span class=\"token punctuation\">.</span>keycodes<span class=\"token punctuation\">.</span><span class=\"token function\">currentSourceID</span><span class=\"token punctuation\">(</span>inputEnglish<span class=\"token punctuation\">)</span>\n    hs<span class=\"token punctuation\">.</span>eventtap<span class=\"token punctuation\">.</span><span class=\"token function\">keyStroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n\n  hs<span class=\"token punctuation\">.</span>eventtap<span class=\"token punctuation\">.</span><span class=\"token function\">keyStroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ESCAPE'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"2020-08-08 WIL","date":"August 08, 2020"}}},"pageContext":{"slug":"/til/2020-08-08-wil/","previous":{"fields":{"slug":"/development/2020-08-08-git-account-setting/"},"frontmatter":{"title":"Github에 ssh key 등록 및 폴더별로 계정 분리","category":"development"}},"next":{"fields":{"slug":"/development/2020-08-27-woowahan-typescript-1/"},"frontmatter":{"title":"우아한 타입스크립트 #1","category":"development"}}}},"staticQueryHashes":["3128451518","96099027"]}