{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2019-09-16-Express-Mysql-Setting-01/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"6c7f00ec-dbca-5ac4-aa61-9262f01de06a","excerpt":"Express와 MySQL을 사용한 project setting 과정을 적어본다. 처음에는 Sequelize를 사용하려고 했는데 적다보니 내용이 너무 길어지고, 아는 것도 얼마 없어서 그냥 를 사용하는 방식으로 변경했다. 이렇게 기록하고 정리하는 과정을 거치지 않으면 한번 해본 것도 잘 기억나지 않아서 시간을 들여 적어본다. 몇몇 교재와 검색한 자료를 짜집기한 내용이라 오류가 많을 수 있다. MySQL 설치, 테이블 생성 등의 내용은 포함하지 않았다. intro…","html":"<p>Express와 MySQL을 사용한 project setting 과정을 적어본다.</p>\n<p>처음에는 Sequelize를 사용하려고 했는데 적다보니 내용이 너무 길어지고, 아는 것도 얼마 없어서 그냥 <code class=\"language-text\">mysel2</code>를 사용하는 방식으로 변경했다.</p>\n<p>이렇게 기록하고 정리하는 과정을 거치지 않으면 한번 해본 것도 잘 기억나지 않아서 시간을 들여 적어본다.</p>\n<p>몇몇 교재와 검색한 자료를 짜집기한 내용이라 오류가 많을 수 있다.</p>\n<p>MySQL 설치, 테이블 생성 등의 내용은 포함하지 않았다.</p>\n<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>intro</h2>\n<p>먼저 폴더를 하나 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">mkdir project-name</code></pre></div>\n<p>해당 폴더롤 이동하여 <code class=\"language-text\">npm init</code>으로 <code class=\"language-text\">package.json</code> 파일을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm init\n\npackage name: (express-dividend-dot-com)\nversion: (1.0.0) 0.0.1\ndescription:\nentry point: (index.js) app.js\ntest command:\ngit repository:\nkeywords:\nauthor:\nlicense: (ISC)\nAbout to write to /Users/angelx/projects/CodeStates/my-project/express-dividend-dot-com/package.json:\n\n{\n  &quot;name&quot;: &quot;express-dividend-dot-com&quot;,\n  &quot;version&quot;: &quot;0.0.1&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;main&quot;: &quot;app.js&quot;,\n  &quot;scripts&quot;: {\n    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;\n  },\n  &quot;author&quot;: &quot;&quot;,\n  &quot;license&quot;: &quot;ISC&quot;\n}</code></pre></div>\n<p>entry point를 app.js로 변경했다.</p>\n<p>npm init이 끝나면 package.json 파일이 하나 생성된다.</p>\n<p>해당 파일에서 scripts 부분에 다음의 내용을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">&quot;start&quot;: &quot;nodemon app&quot;</code></pre></div>\n<h2 id=\"sequelize-설치\" style=\"position:relative;\"><a href=\"#sequelize-%EC%84%A4%EC%B9%98\" aria-label=\"sequelize 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sequelize 설치</h2>\n<p>(sequelize를 사용하지 않는다면 <code class=\"language-text\">mysql2</code>만 설치하고 이 부분은 건너뛰자.)</p>\n<p>다음 command도 sequelize cli를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm i -g sqeuelize-cli</code></pre></div>\n<p>그리고 sequelize와 mysql을 사용하기 위한 package도 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm i sequelize mysql2</code></pre></div>\n<p>package.json 파일을 확인해보면 sequelize와 mysql2가 설치된 것을 확인할 수 있다.</p>\n<p>sequelize-cli`를 설치했기 때문에 터미널에서 sequelize 명령어를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">sequelize init</code></pre></div>\n<p>위와 같이 입력하면 다음의 폴더와 파일들이 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">config/config.json\nmodules\nmigrations\nseeders</code></pre></div>\n<h2 id=\"sequelize를-통해-mysql-database-생성\" style=\"position:relative;\"><a href=\"#sequelize%EB%A5%BC-%ED%86%B5%ED%95%B4-mysql-database-%EC%83%9D%EC%84%B1\" aria-label=\"sequelize를 통해 mysql database 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sequelize를 통해 mysql database 생성</h2>\n<p>(sequelize를 사용하지 않는다면 이 부분도 건너뛰자.)</p>\n<p><code class=\"language-text\">config/config.json</code> 파일에서 DB 설정을 한다.</p>\n<p>개발 단계 이므로 development ​부분만 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"development\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"database_development\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dialect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"operatorsAliases\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>자신의 mysql에 맞게 username, password, database 등을 수정한다.</p>\n<p>설정이 완료되었다면 터미널에서 다음과 같이 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">sequelize db:create</code></pre></div>\n<p>mysql 설정이 제대로 되었다면 <code class=\"language-text\">config.json</code>에서 설정한 database가 생성되었다고 메시지가 출력된다.</p>\n<h2 id=\"nodemon-설치\" style=\"position:relative;\"><a href=\"#nodemon-%EC%84%A4%EC%B9%98\" aria-label=\"nodemon 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nodemon 설치</h2>\n<p>조금 더 편리한 개발을 위해 nodemon을 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm i -D nodemon</code></pre></div>\n<p><code class=\"language-text\">-D</code> 옵션으로 설치하면 package.json의 <code class=\"language-text\">devDependencies</code> 항목에 기록된다.</p>\n<p>nodemon은 터미널에서 직접 입력하여 수행하기도 하기에 global로도 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm i -g nodemon</code></pre></div>\n<h2 id=\"express-기타-package-설치\" style=\"position:relative;\"><a href=\"#express-%EA%B8%B0%ED%83%80-package-%EC%84%A4%EC%B9%98\" aria-label=\"express 기타 package 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>express, 기타 package 설치</h2>\n<p>express와 필요한 기타 package를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm i express morgan</code></pre></div>\n<p><code class=\"language-text\">cookie-parser</code>, <code class=\"language-text\">express-session</code>, <code class=\"language-text\">connect-flash</code> 등은 필요할 때 설치하도록 하자.</p>\n<h2 id=\"express-기본-설정\" style=\"position:relative;\"><a href=\"#express-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95\" aria-label=\"express 기본 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>express 기본 설정</h2>\n<p><code class=\"language-text\">npm init</code>에서 <code class=\"language-text\">entry point</code>를 <code class=\"language-text\">app.js</code>로 설정했었다.</p>\n<p>그래서 root 폴더에 app.js 파일을 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8001</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">8001번 포트로 실행 중입니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>express의 가장 기본 구조다.</p>\n<p>이 상태로 <code class=\"language-text\">npm start</code>를 실행하면 8001번 포트의 요청을 대기한다.</p>\n<p>설치했던 package들을 load하고 미들웨어 설정을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> morgan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"morgan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8001</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">8001번 포트로 실행 중입니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>솔직히 여기서 사용되는 미들웨어들의 기능을 아직 다 파악하지 못하고 있다.</p>\n<p>날을 잡아서 하나하나 찾아봐야겠다.</p>\n<p><code class=\"language-text\">app.set()</code>, <code class=\"language-text\">app.get()</code>을 이용하여 port를 동적으로 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> morgan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"morgan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"8001\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">번 포트로 실행 중입니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>process.env를 사용하여 PORT 값이 있으면 해당 값을 사용하고 없다면 8001번을 사용하도록 설정했다.</p>\n<p><code class=\"language-text\">app.set()</code>으로 설정한 값은 <code class=\"language-text\">app.get()</code>으로 불러올 수 있다.</p>\n<p><code class=\"language-text\">app.listen()</code>에서 <code class=\"language-text\">app.get()</code>을 이용하여 설정한 port 값을 불러온다.</p>\n<h2 id=\"dotenv-사용\" style=\"position:relative;\"><a href=\"#dotenv-%EC%82%AC%EC%9A%A9\" aria-label=\"dotenv 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dotenv 사용</h2>\n<p>port를 설정할 때 <code class=\"language-text\">process.env.PORT</code>의 값을 확인했었다.</p>\n<p>이것은 <code class=\"language-text\">dotenv</code> package를 사용한 것이다.</p>\n<p>다음과 같이 <code class=\"language-text\">dotenv</code> package를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm i dotenv</code></pre></div>\n<p>그리고 root 폴더에 <code class=\"language-text\">.env</code>파일을 하나 생성한다.</p>\n<p><code class=\"language-text\">.env</code> 파일에는 <code class=\"language-text\">key=value</code> 형식으로 값을 입력하면 된다.</p>\n<p><code class=\"language-text\">.env</code> 파일에 port 값을 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">PORT=8002</code></pre></div>\n<p>이렇게 <code class=\"language-text\">.env</code> 파일을 이용하면 코드에 비밀번호 같은 것이 포함되는 것을 막을 수 있다.</p>\n<p>마지막으로 <code class=\"language-text\">app.js</code> 파일의 최상단에 다음과 같이 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dotenv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이렇게 입력하자마자 <code class=\"language-text\">nodemon</code>에 의해 8002번 포트로 서버가 시작된다.</p>\n<p>(다음 편에 게속)</p>","frontmatter":{"title":"[Express] Express Mysql Setting #1","date":"September 16, 2019"}}},"pageContext":{"slug":"/til/2019-09-16-Express-Mysql-Setting-01/","previous":{"fields":{"slug":"/til/2019-09-16-TIL-2019-09-16/"},"frontmatter":{"title":"[TIL] 2019-09-13","category":"TIL"}},"next":{"fields":{"slug":"/til/2019-09-23-cookie-session-concept/"},"frontmatter":{"title":"[Node.js] Cookie, Session 단순 예제","category":"TIL"}}}},"staticQueryHashes":["3128451518","96099027"]}