{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2021-01-10-til/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://blog.doitreviews.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b4f35928-663a-58e8-b993-d500fc929ef1","excerpt":"오늘도 모던 자바스크립트의 DOM 관련 문서를 읽었습니다. 간단하게 다음의 문답으로 오늘의 글을 대신하려고 합니다. Q. childNodes와 children의 차이는 무엇인가요? A. childNodes는 text node, element node, commenct node 등 해당 문서의 모든 node를 포함합니다. children은 해당 문서의 element node들 만을 나타냅니다. Q. elem.lastChild.nextSibling은 항상 null일까요? lastChild…","html":"<p>오늘도 모던 자바스크립트의 DOM 관련 문서를 읽었습니다. 간단하게 다음의 문답으로 오늘의 글을 대신하려고 합니다.</p>\n<p>Q. childNodes와 children의 차이는 무엇인가요?</p>\n<p>A. childNodes는 text node, element node, commenct node 등 해당 문서의 모든 node를 포함합니다. children은 해당 문서의 element node들 만을 나타냅니다.</p>\n<p>Q. elem.lastChild.nextSibling은 항상 null일까요?</p>\n<p>lastChild는 가장 마지막 node 이므로 lastChild.nextSibling은 항상 null 입니다.</p>\n<p>Q. elem.children[0].previousSibling은 항상 null일까요?</p>\n<p>children은 element node 만을 의미하므로 element node 앞에 text node나 comment node가 있을 수 있습니다. 그래서 항상 null이라고 할 수는 없습니다.</p>","frontmatter":{"title":"2021-01-10 TIL","date":"January 11, 2021"}}},"pageContext":{"slug":"/til/2021-01-10-til/","previous":{"fields":{"slug":"/til/2021-01-09-til/"},"frontmatter":{"title":"2021-01-09 TIL","category":"til"}},"next":{"fields":{"slug":"/til/2021-01-11-til/"},"frontmatter":{"title":"2021-01-11 TIL","category":"til"}}}},"staticQueryHashes":["1763525275","3128451518"]}