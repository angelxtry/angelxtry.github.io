{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-04-30-webpack-advanced/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c2ab1d89-8cd4-5f6c-8d1c-d4a8c572d66a","excerpt":"인프런의 프론트앤드 개발환경의 이해와 실습을 듣고 일부 내용을 정리해본다. 어제에 이어 webpack의 기능을 좀 더 정리해보자. 1. Webpack dev server webpack-dev-server를 설치한 후 package.json의 script에 추가한다. yarn start로 실행하면 http://localhost:8080/으로 웹 서버가 실행된다. 터미널을 살펴보면 webpack이 실행된 것을 알 수 있다. ​관련 파일을 수정해면 브라우저가 바로 갱신된다. css…","html":"<p><a href=\"https://www.inflearn.com/course/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/dashboard\">인프런의 프론트앤드 개발환경의 이해와 실습</a>을 듣고 일부 내용을 정리해본다.</p>\n<p>어제에 이어 webpack의 기능을 좀 더 정리해보자.</p>\n<h2 id=\"1-webpack-dev-server\"><a href=\"#1-webpack-dev-server\" aria-label=\"1 webpack dev server permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Webpack dev server</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">yarn add <span class=\"token operator\">-</span><span class=\"token constant\">D</span> webpack<span class=\"token operator\">-</span>dev<span class=\"token operator\">-</span>server</code></pre></div>\n<p>webpack-dev-server를 설치한 후 package.json의 script에 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-dev-server\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>yarn start로 실행하면 <a href=\"http://localhost:8080/\">http://localhost:8080/</a>으로 웹 서버가 실행된다.</p>\n<p>터미널을 살펴보면 webpack이 실행된 것을 알 수 있다.</p>\n<p>​관련 파일을 수정해면 브라우저가 바로 갱신된다. css 파일만 수정해도 브라우저에 바로 반영된다.</p>\n<h3 id=\"1-1-devserver-options\"><a href=\"#1-1-devserver-options\" aria-label=\"1 1 devserver options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-1. devServer options</h3>\n<p>webpack.config.js 파일에서 webpack-dev-server의 옵션을 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> child_process <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> CleanWebpackPlugin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clean-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MiniCssExtractPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mini-css-extract-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token punctuation\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    main<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/app.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'errors-only'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n            <span class=\"token operator\">?</span> MiniCssExtractPlugin<span class=\"token punctuation\">.</span>loader\n            <span class=\"token punctuation\">:</span> <span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.(jpg|png|gif|svg)$/</span><span class=\"token punctuation\">,</span>\n        loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'url-loader'</span><span class=\"token punctuation\">,</span>\n        options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          publicPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'./'</span><span class=\"token punctuation\">,</span>\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].[ext]?[hash]'</span><span class=\"token punctuation\">,</span>\n          limit<span class=\"token punctuation\">:</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 20k</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>BannerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      banner<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        Build Date: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleDateString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n      </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">VALUE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1 + 1'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">STRING</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1 + 1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'api.domain'</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.domain.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      template<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.html'</span><span class=\"token punctuation\">,</span>\n      templateParameters<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        env<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'development'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'(DEV)'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      minify<span class=\"token punctuation\">:</span>\n        process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n          <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n              collapseWhitespace<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n              removeComments<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n      <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].css'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'errors-only'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>에러가 발생하면 브라우저에 overlay 된다.</p>\n<p>자주 쓰이는 옵션은 따로 정리해보자.</p>\n<h3 id=\"1-2-api-mock\"><a href=\"#1-2-api-mock\" aria-label=\"1 2 api mock permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2. api mock</h3>\n<p>api mock 기능을 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> child_process <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> CleanWebpackPlugin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clean-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MiniCssExtractPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mini-css-extract-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token punctuation\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    main<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/app.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'errors-only'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">before</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            id<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            id<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Mike'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n            <span class=\"token operator\">?</span> MiniCssExtractPlugin<span class=\"token punctuation\">.</span>loader\n            <span class=\"token punctuation\">:</span> <span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.(jpg|png|gif|svg)$/</span><span class=\"token punctuation\">,</span>\n        loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'url-loader'</span><span class=\"token punctuation\">,</span>\n        options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          publicPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'./'</span><span class=\"token punctuation\">,</span>\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].[ext]?[hash]'</span><span class=\"token punctuation\">,</span>\n          limit<span class=\"token punctuation\">:</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 20k</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>BannerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      banner<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        Build Date: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleDateString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n      </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">VALUE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1 + 1'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">STRING</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1 + 1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'api.domain'</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.domain.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      template<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.html'</span><span class=\"token punctuation\">,</span>\n      templateParameters<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        env<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'development'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'(DEV)'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      minify<span class=\"token punctuation\">:</span>\n        process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n          <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n              collapseWhitespace<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n              removeComments<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n      <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].css'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'errors-only'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">before</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Mike'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><a href=\"http://localhost:8080/api/users\">http://localhost:8080/api/users</a>로 접근하면 json을 반환한다.</p>\n<p>axios를 설치하고 app.js 코드를 다음과 같이 수정해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./app.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> party <span class=\"token keyword\">from</span> <span class=\"token string\">'./party-8-240.png'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    &lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>party<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" />\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>화면이 로드되자마자 api가 호출되고 결과가 console에 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./app.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> party <span class=\"token keyword\">from</span> <span class=\"token string\">'./party-8-240.png'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    &lt;img src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>party<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" />\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/div></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>결과를 출력했다.</p>\n<h3 id=\"1-3-connect-api-mocker\"><a href=\"#1-3-connect-api-mocker\" aria-label=\"1 3 connect api mocker permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-3. connect-api-mocker</h3>\n<p>먼저 package를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">yarn add <span class=\"token operator\">-</span><span class=\"token constant\">D</span> connect<span class=\"token operator\">-</span>api<span class=\"token operator\">-</span>mocker</code></pre></div>\n<p>src와 같은 level에 mocks 폴더를 생성하고 하위 폴더와 파일을 추가한다.</p>\n<p>mocks/api/users/GET.json</p>\n<p>폴더 경로 api/users는 request 요청 url과 동일하게 설정한다.</p>\n<p>그리고 GET 요청이기 때문에 GET.json 파일을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Alice\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bob\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mike\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>데이터는 devServer와 동일하다.</p>\n<p>webpack.config.js 파일을 수정하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> apiMocker <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect-api-mocker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndevServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'errors-only'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">before</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">apiMocker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./mocks/api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>apiMocker는 urlRoot와 pathRoot를 인자로 받는다. 각 항목을 입력하면 devServer에서 request에 응답하던 것과 동일한 역할을 수행할 수 있다.</p>\n<h3 id=\"1-4-proxy\"><a href=\"#1-4-proxy\" aria-label=\"1 4 proxy permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-4. proxy</h3>\n<p>개발 중 실제 백앤드 서버의 API를 테스트할 때 CORS 문제로 테스트에 어려움을 겪는 경우가 종종 있다.</p>\n<p>localhost:xxxx를 백앤드에 등록하여 해결할 수 도 있지만 webpack devServer proxy를 사용하여 해결할 수 도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'errors-only'</span><span class=\"token punctuation\">,</span>\n  proxy<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'/api'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http://server-domain'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>front 코드는 devServer에 api 응답을 요청하고, devServer는 백앤드 서버에 다시 응답을 요청한다.</p>\n<p>이때 proxy가 CORS가 발생하지 않도록 처리한다.</p>\n<p>다음 글도 참고하자. <a href=\"https://react.vlpt.us/redux-middleware/09-cors-and-proxy.html\">https://react.vlpt.us/redux-middleware/09-cors-and-proxy.html</a></p>\n<h2 id=\"2-최적화\"><a href=\"#2-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"2 최적화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 최적화</h2>\n<p>DefinePlguin을 사용하고 proess.env.NODE_ENV를 설정하면 해당 값이 전역변수로 주입된다.</p>\n<p>mode를 정의하여 process.env.NODE_ENV 값에따라 분기할 수 있도록 처리한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> mode <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>package.json의 scirpt에 production을 추가하여 실행하보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=production webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=production webpack-dev-server --progress\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>yarn build를 실행하면 dist의 main.js가 난독화되어 생성된다.</p>\n<h3 id=\"2-1-css-파일-최적화\"><a href=\"#2-1-css-%ED%8C%8C%EC%9D%BC-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"2 1 css 파일 최적화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. css 파일 최적화</h3>\n<p>package를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">yarn add <span class=\"token operator\">-</span><span class=\"token constant\">D</span> optimize<span class=\"token operator\">-</span>css<span class=\"token operator\">-</span>assets<span class=\"token operator\">-</span>webpack<span class=\"token operator\">-</span>plugin</code></pre></div>\n<p>webpack.config.js 파일에 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> OptimizeCSSAssetsPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'optimize-css-assets-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndevServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  stats<span class=\"token punctuation\">:</span> <span class=\"token string\">'errors-only'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">before</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">apiMocker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./mocks/api'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  hot<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\noptimization<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  minimizer<span class=\"token punctuation\">:</span> mode <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OptimizeCSSAssetsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>이렇게 설정한 후 <code class=\"language-text\">NODE_ENV=production webpack</code>를 실행하면 dist 폴더의 css 파일의 공백이 모두 제거된 것을 확인할 수 있다.</p>\n<h3 id=\"2-2-terserpluginterser-webpack-plugin\"><a href=\"#2-2-terserpluginterser-webpack-plugin\" aria-label=\"2 2 terserpluginterser webpack plugin permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. TerserPlugin(terser-webpack-plugin)</h3>\n<p>js 파일을 압축하고, console 코드를 자동으로 삭제할 수 있다.</p>\n<p>설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">yarn add <span class=\"token operator\">-</span><span class=\"token constant\">D</span> terser<span class=\"token operator\">-</span>webpack<span class=\"token operator\">-</span>plugin</code></pre></div>\n<p>webpack.config.js에 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> TerserPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'terser-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\noptimization<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  minimizer<span class=\"token punctuation\">:</span>\n    mode <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n      <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">OptimizeCSSAssetsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            terserOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              compress<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                drop_console<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>webpack을 production 모드로 실행하면 bundle 파일에 적용된다.</p>\n<h3 id=\"2-3-code-spliting\"><a href=\"#2-3-code-spliting\" aria-label=\"2 3 code spliting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-3. code spliting</h3>\n<p>entry를 추가해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token punctuation\">,</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    main<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/app.js'</span><span class=\"token punctuation\">,</span>\n    result<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/result.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>result를 추가했다.</p>\n<p>이 상태로 yarn build를 실행하면 dist 폴더에 result관련 파일들이 생성된다.</p>\n<p>index.html을 살펴보면 app.js, result.js를 모두 로드하는 것을 볼 수 있다.</p>\n<p>하지만 app.js와 result.js에 중복 코드가 많이 존재하게 된다.</p>\n<p>이 중복 코드를 제거하기 위해 다음과 같이 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">optimization<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  minimizer<span class=\"token punctuation\">:</span>\n    mode <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n      <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">OptimizeCSSAssetsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            terserOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              compress<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                drop_console<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  splitChunks<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    chunks<span class=\"token punctuation\">:</span> <span class=\"token string\">'all'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>설정 후 yarn build를 실행하자.</p>\n<p>설정 전 후 결과를 비교해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 중복 제거 전</span>\n                                     Asset       Size  Chunks                    Chunk Names\ncat01<span class=\"token punctuation\">.</span>jpg<span class=\"token operator\">?</span>e9138897b09dd1181948c510691fecd7    <span class=\"token number\">721</span> KiB          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">[</span>big<span class=\"token punctuation\">]</span>\n                                index<span class=\"token punctuation\">.</span>html  <span class=\"token number\">279</span> bytes          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>\n                                  main<span class=\"token punctuation\">.</span>css  <span class=\"token number\">153</span> bytes    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>         main\n                                   main<span class=\"token punctuation\">.</span>js   <span class=\"token number\">16.2</span> KiB    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>         main\n                       main<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span><span class=\"token constant\">LICENSE</span><span class=\"token punctuation\">.</span>txt   <span class=\"token number\">55</span> bytes          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>\n                                 result<span class=\"token punctuation\">.</span>js   <span class=\"token number\">15.7</span> KiB       <span class=\"token number\">1</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>         result\n                     result<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span><span class=\"token constant\">LICENSE</span><span class=\"token punctuation\">.</span>txt   <span class=\"token number\">55</span> bytes          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// 중복 제거 후</span>\n                                     Asset       Size  Chunks                    Chunk Names\ncat01<span class=\"token punctuation\">.</span>jpg<span class=\"token operator\">?</span>e9138897b09dd1181948c510691fecd7    <span class=\"token number\">721</span> KiB          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">[</span>big<span class=\"token punctuation\">]</span>\n                                index<span class=\"token punctuation\">.</span>html  <span class=\"token number\">325</span> bytes          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>\n                                  main<span class=\"token punctuation\">.</span>css  <span class=\"token number\">153</span> bytes    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>         main\n                                   main<span class=\"token punctuation\">.</span>js   <span class=\"token number\">2.21</span> KiB    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>         main\n                       main<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span><span class=\"token constant\">LICENSE</span><span class=\"token punctuation\">.</span>txt   <span class=\"token number\">55</span> bytes          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>\n                                 result<span class=\"token punctuation\">.</span>js   <span class=\"token number\">1.71</span> KiB       <span class=\"token number\">2</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>         result\n                     result<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span><span class=\"token constant\">LICENSE</span><span class=\"token punctuation\">.</span>txt   <span class=\"token number\">55</span> bytes          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>\n                    vendors<span class=\"token operator\">~</span>main<span class=\"token operator\">~</span>result<span class=\"token punctuation\">.</span>js   <span class=\"token number\">14.7</span> KiB       <span class=\"token number\">0</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>         vendors<span class=\"token operator\">~</span>main<span class=\"token operator\">~</span>result\n        vendors<span class=\"token operator\">~</span>main<span class=\"token operator\">~</span>result<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span><span class=\"token constant\">LICENSE</span><span class=\"token punctuation\">.</span>txt   <span class=\"token number\">55</span> bytes          <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span></code></pre></div>\n<p>main.js, result.js 파일의 용량이 줄어들었다. 그리고 venders… 라는 파일이 추가되었다.</p>\n<p>중복코드는 vendors… 파일에 포함된다.</p>\n<h3 id=\"2-4-externals\"><a href=\"#2-4-externals\" aria-label=\"2 4 externals permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-4. externals</h3>\n<p>bundle할 필요가 없는 대상은 제외하는 것이 좋다.</p>\n<p>bundle할 필요가 없는 대상이란 보통 package로 설치하는 라이브러리들이다.</p>\n<p>axios를 처리해보자.</p>\n<p>webpack.config.js 파일을 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">optimization<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  minimizer<span class=\"token punctuation\">:</span>\n    mode <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\n      <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">OptimizeCSSAssetsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            terserOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              compress<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                drop_console<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  splitChunks<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    chunks<span class=\"token punctuation\">:</span> <span class=\"token string\">'all'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nexternals<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  axios<span class=\"token punctuation\">:</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>externals의 의미는 axios를 전역변수를 사용하는 것으로 간주한다는 의미다.</p>\n<p>전역변수 처럼 사용하려면 node_modules/axios/dist/axios.min.js 파일을 html에서 로드해두면 된다.</p>\n<p>build 할 때 이 파일을 dist 폴더에 복사한다.</p>\n<p>복사를 위해 copy-webpack-plugin을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">yarn add <span class=\"token operator\">-</span><span class=\"token constant\">D</span> copy<span class=\"token operator\">-</span>webpack<span class=\"token operator\">-</span>plugin</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CopyPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./node_modules/axios/dist/axios.min.js'</span><span class=\"token punctuation\">,</span>\n      to<span class=\"token punctuation\">:</span> <span class=\"token string\">'./axios.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>plugins에 CopyPlugin 설정을 한다.</p>\n<p>from, to를 설정하는데 to는 dist 경로를 생략해야 한다. dist를 추가하면 dist/dist/axios.min.js 가 된다.</p>\n<p>src/index.html 파일에서 ./dist/axios 파일을 로드할 수 있도록 script를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>axios.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>여기서도 경로에 주의하자.</p>\n<p>dist 폴더의 파일들의 용량을 확인해보면 axios 파일을 제외하고 나머지 파일들의 용량이 크게 줄었다.</p>\n<p>axios 파일의 용량이 크게 차지하고 있었음을 알 수 있다.</p>","frontmatter":{"title":"[Webpack] devServer, 최적화","date":"April 30, 2020"}}},"pageContext":{"slug":"/development/2020-04-30-webpack-advanced/","previous":{"fields":{"slug":"/til/2020-04-29-til/"},"frontmatter":{"title":"2020-04-29 TIL","category":"til"}},"next":{"fields":{"slug":"/til/2020-05-03-til/"},"frontmatter":{"title":"2020-05-03 TIL","category":"til"}}}}}