{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-10-16-express-with-winston/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"454ef9be-4ec6-5ec8-a1ce-5d9dc7cfa5bd","excerpt":"Express 서버에 logging을 위해 winston을 사용했다. winston 사용법을 간단하게 적어보자. 과 을 함께 설치했다. printf를 이용하여  형식으로 출력하게 설정했다. timestamp는 YYYY-MM-DD HH:mm:ss 형식으로 출력한다. winston은 를 통해 다양한 방식(?)으로 로그를 남길 수 있다. 을 이용하여 다음과 같이 설정했다. 파일명은 2020-10-16-21.log 처럼 생성된다. 경로는 logs 최대 보관 주기는 7일.…","html":"<p>Express 서버에 logging을 위해 winston을 사용했다.</p>\n<p>winston 사용법을 간단하게 적어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> winston <span class=\"token keyword\">from</span> <span class=\"token string\">'winston'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> winstonDaily <span class=\"token keyword\">from</span> <span class=\"token string\">'winston-daily-rotate-file'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> combine<span class=\"token punctuation\">,</span> timestamp<span class=\"token punctuation\">,</span> printf <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> winston<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> logDir <span class=\"token operator\">=</span> <span class=\"token string\">'logs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> logFormat <span class=\"token operator\">=</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">info</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>info<span class=\"token punctuation\">.</span>timestamp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">|</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>info<span class=\"token punctuation\">.</span>level<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">|</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>info<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> logger <span class=\"token operator\">=</span> winston<span class=\"token punctuation\">.</span><span class=\"token function\">createLogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  format<span class=\"token punctuation\">:</span> <span class=\"token function\">combine</span><span class=\"token punctuation\">(</span><span class=\"token function\">timestamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> format<span class=\"token punctuation\">:</span> <span class=\"token string\">'YYYY-MM-DD HH:mm:ss'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> logFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  transports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">winstonDaily</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      level<span class=\"token punctuation\">:</span> <span class=\"token string\">'info'</span><span class=\"token punctuation\">,</span>\n      datePattern<span class=\"token punctuation\">:</span> <span class=\"token string\">'YYYY-MM-DD-HH'</span><span class=\"token punctuation\">,</span>\n      dirname<span class=\"token punctuation\">:</span> logDir<span class=\"token punctuation\">,</span>\n      filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'%DATE%.log'</span><span class=\"token punctuation\">,</span>\n      maxFiles<span class=\"token punctuation\">:</span> <span class=\"token string\">'7d'</span><span class=\"token punctuation\">,</span>\n      maxSize<span class=\"token punctuation\">:</span> <span class=\"token string\">'20m'</span><span class=\"token punctuation\">,</span>\n      zippedArchive<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">winstonDaily</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      level<span class=\"token punctuation\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n      datePattern<span class=\"token punctuation\">:</span> <span class=\"token string\">'YYYY-MM-DD-HH'</span><span class=\"token punctuation\">,</span>\n      dirname<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>logDir<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/error</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'%DATE%.error.log'</span><span class=\"token punctuation\">,</span>\n      maxFiles<span class=\"token punctuation\">:</span> <span class=\"token string\">'7d'</span><span class=\"token punctuation\">,</span>\n      maxSize<span class=\"token punctuation\">:</span> <span class=\"token string\">'20m'</span><span class=\"token punctuation\">,</span>\n      zippedArchive<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  logger<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">winston<span class=\"token punctuation\">.</span>transports<span class=\"token punctuation\">.</span>Console</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      format<span class=\"token punctuation\">:</span> winston<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">combine</span><span class=\"token punctuation\">(</span>winston<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">colorize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> winston<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">simple</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">write</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">winston</code>과 <code class=\"language-text\">winston-daily-rotate-file</code>을 함께 설치했다.</p>\n<p>printf를 이용하여 <code class=\"language-text\">timestamp|level|message</code> 형식으로 출력하게 설정했다.</p>\n<p>timestamp는 YYYY-MM-DD HH:mm:ss 형식으로 출력한다.</p>\n<p>winston은 <code class=\"language-text\">transports</code>를 통해 다양한 방식(?)으로 로그를 남길 수 있다.</p>\n<p><code class=\"language-text\">winston-daily-rotate-file</code>을 이용하여 다음과 같이 설정했다.</p>\n<ul>\n<li>파일명은 2020-10-16-21.log 처럼 생성된다.</li>\n<li>경로는 logs</li>\n<li>최대 보관 주기는 7일. 7일이 지난 파일은 삭제된다.</li>\n<li>파일의 크기는 20m. 20m를 넘으면 다른 파일이 생성된다.</li>\n<li>다른 파일이 생성될 때 기존 파일은 압축된다.</li>\n</ul>\n<p>그리고 production 모드가 아닌 경우 transports에 console 출력도 포함시켰다.</p>\n<p>winston은 기본적으로 다음과 같은 level을 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> \n  error<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> \n  warn<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> \n  info<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> \n  http<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  verbose<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> \n  debug<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> \n  silly<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>숫자가 높은 level을 설정하면 숫자가 낮은 level이 자동으로 포함된다.</p>\n<p>위의 코드에서 <code class=\"language-text\">info</code>와 <code class=\"language-text\">error</code>를 설정했는데, info에는 error의 내용이 함께 기록된다.</p>\n<p>level과 각 level의 color도 커스텀할 수 있다.</p>\n<p>마지막으로 <code class=\"language-text\">stream</code>은 Express에서 자주 사용하는 morgan의 log를 파일로 출력하기 위해 만들어 둔다.</p>\n<p>이제 Express 코드를 확인해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> cors <span class=\"token keyword\">from</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> helmet <span class=\"token keyword\">from</span> <span class=\"token string\">'helmet'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> morgan <span class=\"token keyword\">from</span> <span class=\"token string\">'morgan'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> common<span class=\"token punctuation\">,</span> logger<span class=\"token punctuation\">,</span> stream <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./config'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    origin<span class=\"token punctuation\">:</span> common<span class=\"token punctuation\">.</span>corsUrl<span class=\"token punctuation\">,</span>\n    credentials<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">helmet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'combined'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> stream <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> port <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> common<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">start</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">server is on </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>logger와 stream을 모두 import 했다.</p>\n<p>morgan의 log는 stream으로 파일에 기록한다.</p>\n<p>일반적으로는 <code class=\"language-text\">logger.info</code>나 <code class=\"language-text\">logger.error</code>를 이용하여 로그를 기록한다.</p>\n<h2 id=\"참고자료\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<p><a href=\"https://velog.io/@ash/Node.js-%EC%84%9C%EB%B2%84%EC%97%90-logging-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-winston-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">[Node.js] Logging 라이브러리 winston 적용하기</a></p>\n<p><a href=\"https://www.npmjs.com/package/winston\">winston - npm</a></p>\n<p><a href=\"https://github.com/winstonjs/winston-daily-rotate-file\">winston-daily-rotate-file</a></p>","frontmatter":{"title":"Express에 winston 추가","date":"October 16, 2020"}}},"pageContext":{"slug":"/development/2020-10-16-express-with-winston/","previous":{"fields":{"slug":"/development/2020-10-12-node-review-01/"},"frontmatter":{"title":"Node.js - Express 복습","category":"development"}},"next":null}}}