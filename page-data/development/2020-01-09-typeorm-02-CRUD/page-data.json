{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-01-09-typeorm-02-CRUD/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"ba91ce25-fecd-5b61-9439-0bf4c86173f5","excerpt":"데이터를 저장하고, 조회하고, 변경하고, 삭제해보자. Entity 일단 entity를 수정한다.  Repository 데이터 저장을 실행할 메서드를 Repository에 생성한다.   Insert TypeORM은 데이터를 insert하거나 update 할 때 모두 save를 사용한다. save는 인자로 해당 instance를 받고, 저장된 결과를 Promise로 반환한다. 따라서 save에 인자로 전달할 instance를 만들기 위해 create를 사용한다. create는 해당 class…","html":"<p>데이터를 저장하고, 조회하고, 변경하고, 삭제해보자.</p>\n<h2 id=\"entity\"><a href=\"#entity\" aria-label=\"entity permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entity</h2>\n<p>일단 entity를 수정한다.</p>\n<p><code class=\"language-text\">src/entity/User.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn<span class=\"token punctuation\">,</span> Column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">enum</span> LevelEnum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">L1</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L2</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 2'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L3</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 3'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L4</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 4'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L5</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 5'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Entity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">PrimaryGeneratedColumn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uuid'</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'varchar'</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'varchar'</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  nickname<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'enum'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span><span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">L1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  level<span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"repository\"><a href=\"#repository\" aria-label=\"repository permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repository</h2>\n<p>데이터 저장을 실행할 메서드를 Repository에 생성한다.</p>\n<p><code class=\"language-text\">src/repository/UserRepository.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../entity/User'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserInfo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../types'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userInfo<span class=\"token punctuation\">:</span> UserInfo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>userInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">createUsers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">usersInfo<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>UserInfo<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>usersInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">src/types.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LevelEnum <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./entity/User'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserInfo</span> <span class=\"token punctuation\">{</span>\n  email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  nickname<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  level<span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"insert\"><a href=\"#insert\" aria-label=\"insert permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Insert</h2>\n<p>TypeORM은 데이터를 insert하거나 update 할 때 모두 save를 사용한다. save는 인자로 해당 instance를 받고, 저장된 결과를 Promise로 반환한다.</p>\n<p>따라서 save에 인자로 전달할 instance를 만들기 위해 create를 사용한다. create는 해당 class의 instance를 만든다. 여기서는 new User()를 한 것과 같다.</p>\n<p>이제 데이터를 저장해보자.</p>\n<p><code class=\"language-text\">src/index.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token string\">'reflect-metadata'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./repository'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LevelEnum <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./entity/User'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> users<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>UserInfo<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token string\">'aaa@gmail.com'</span><span class=\"token punctuation\">,</span>\n    nickname<span class=\"token punctuation\">:</span> <span class=\"token string\">'aaa'</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">L1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token string\">'bbb@gmail.com'</span><span class=\"token punctuation\">,</span>\n    nickname<span class=\"token punctuation\">:</span> <span class=\"token string\">'bbb'</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">L2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token string\">'ccc@gmail.com'</span><span class=\"token punctuation\">,</span>\n    nickname<span class=\"token punctuation\">:</span> <span class=\"token string\">'ccc'</span><span class=\"token punctuation\">,</span>\n    level<span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">L3</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">startServer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> newUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>user가 하나 저장되고 저장된 값이 리턴되어 터미널에 출력된다. ormconfig.json에 <code class=\"language-text\">&quot;logging&quot;: true,</code> 옵션을 넣었다면 실행된 query도 같이 출력되었을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">query: START TRANSACTION\nquery: INSERT INTO `user`(`id`, `email`, `nickname`, `level`) VALUES (?, ?, ?, ?) -- PARAMETERS: [&quot;b36fbe1d-37c0-4368-aeab-fa60d881e878&quot;,&quot;aaa@gmail.com&quot;,&quot;aaa&quot;,&quot;Level 1&quot;]\nquery: SELECT `User`.`id` AS `User_id`, `User`.`level` AS `User_level` FROM `user` `User` WHERE `User`.`id` = ? -- PARAMETERS: [&quot;b36fbe1d-37c0-4368-aeab-fa60d881e878&quot;]\nquery: COMMIT</code></pre></div>\n<p>INSERT와 SELECT를 같이 처리하는 것을 볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> newUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUsers</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>데이터 3건을 한번에 저장해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">query: START TRANSACTION\nquery: INSERT INTO `user`(`id`, `email`, `nickname`, `level`) VALUES (?, ?, ?, ?) -- PARAMETERS: [&quot;be411637-390c-4050-a138-97329b37d04b&quot;,&quot;aaa@gmail.com&quot;,&quot;aaa&quot;,&quot;Level 1&quot;]\nquery: SELECT `User`.`id` AS `User_id`, `User`.`level` AS `User_level` FROM `user` `User` WHERE `User`.`id` = ? -- PARAMETERS: [&quot;be411637-390c-4050-a138-97329b37d04b&quot;]\nquery: INSERT INTO `user`(`id`, `email`, `nickname`, `level`) VALUES (?, ?, ?, ?) -- PARAMETERS: [&quot;af36f22f-dcbc-448b-98ee-71f9fcafbb66&quot;,&quot;bbb@gmail.com&quot;,&quot;bbb&quot;,&quot;Level 2&quot;]\nquery: SELECT `User`.`id` AS `User_id`, `User`.`level` AS `User_level` FROM `user` `User` WHERE `User`.`id` = ? -- PARAMETERS: [&quot;af36f22f-dcbc-448b-98ee-71f9fcafbb66&quot;]\nquery: INSERT INTO `user`(`id`, `email`, `nickname`, `level`) VALUES (?, ?, ?, ?) -- PARAMETERS: [&quot;1fbb760b-aad2-4e9c-90f0-f5da985d3f72&quot;,&quot;ccc@gmail.com&quot;,&quot;ccc&quot;,&quot;Level 3&quot;]\nquery: SELECT `User`.`id` AS `User_id`, `User`.`level` AS `User_level` FROM `user` `User` WHERE `User`.`id` = ? -- PARAMETERS: [&quot;1fbb760b-aad2-4e9c-90f0-f5da985d3f72&quot;]\nquery: COMMIT</code></pre></div>\n<p>하나의 transaction으로 처리하지만 query는 총 6번 실행된다.</p>\n<h2 id=\"select\"><a href=\"#select\" aria-label=\"select permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Select</h2>\n<p>데이터를 한 건 조회해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUsers</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> userAAA <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">:</span> users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>userAAA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">findOne</code>은 builtin이다. Entity에 존재하는 컬럼과 데이터를 전달하면 1건을 조회한다. Sequelize 같이 where 키워드를 쓰지 않아도 된다. 물론 써도 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> userAAA2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  where<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">:</span> users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>userAAA2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">find</code>는 배열을 리턴한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> selectedUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selectedUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> userIds <span class=\"token operator\">=</span> selectedUsers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span> <span class=\"token operator\">=></span> u<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> createdUser3 <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> userIds<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasId</span><span class=\"token punctuation\">(</span>createdUser3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'exist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'not exist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">hasId</code>로 exist를 판단할 수 있다.</p>\n<h2 id=\"update\"><a href=\"#update\" aria-label=\"update permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> user1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByEmail</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  user1<span class=\"token punctuation\">.</span>nickname <span class=\"token operator\">=</span> <span class=\"token string\">'zzz'</span><span class=\"token punctuation\">;</span>\n  user1<span class=\"token punctuation\">.</span>level <span class=\"token operator\">=</span> LevelEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">L5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> upatedUser1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>upatedUser1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>앞에서도 언급했지만 <code class=\"language-text\">save</code>는 insert, update에 모두 사용할 수 있다.</p>\n<p>ccc가 zzz로 변경되었다.</p>\n<p>데이터를 한 건 더 변경해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> user2<span class=\"token punctuation\">:</span> User <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> userIds<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser2<span class=\"token punctuation\">.</span>nickname <span class=\"token operator\">=</span> <span class=\"token string\">'yyy'</span><span class=\"token punctuation\">;</span>\nuser2<span class=\"token punctuation\">.</span>level <span class=\"token operator\">=</span> LevelEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">L4</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> upatedUser2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>upatedUser2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> allUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>allUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Primary key를 알 수 있다면 select를 할 필요없이 create로 처리할 수도 있다.</p>\n<p>위와 같이 실행하면 bbb가 yyy로 변경될 것 같지만 실제로는 어떤 user가 변경될지 알 수 없다. 즉, select는 순서를 보장하지 않는다. 순서를 보장하려면 <code class=\"language-text\">order</code> option을 사용해야 한다.</p>\n<h2 id=\"delete\"><a href=\"#delete\" aria-label=\"delete permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Delete</h2>\n<p>삭제는 <code class=\"language-text\">delete</code>, <code class=\"language-text\">remove</code> 두 가지가 있다. 둘 다 삭제된 항목을 리턴한다.</p>\n<p><code class=\"language-text\">delete</code>는 where 조건으로 항목을 삭제할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUsers</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> deletedUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  email<span class=\"token punctuation\">:</span> users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>deletedUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> allUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>allUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">remove</code>는 entity를 인자로 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> createdUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUsers</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> usersExceptAaa <span class=\"token operator\">=</span> createdUsers<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span> <span class=\"token operator\">=></span> u<span class=\"token punctuation\">.</span>nickname <span class=\"token operator\">!==</span> <span class=\"token string\">'aaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usersExceptAaa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> deletedUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>usersExceptAaa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>deletedUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> allUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>allUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"2020-01-09 TypeORM - 02 CRUD","date":"January 10, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/development/2020-01-09-typeorm-02-CRUD/","previous":{"fields":{"slug":"/til/2020-01-06-til/"},"frontmatter":{"title":"2020-01-06 TIL","category":"TIL"}},"next":null}}}