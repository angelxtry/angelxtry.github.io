{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-01-21/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"8a7f70ca-1b53-557d-b067-20183c889942","excerpt":"지난 번에 작성한 TypeORM 코드에 GraphQL을 추가해보자. 프로젝트 구조 프로젝트 구조는 다음과 같다. 이번에 작업할  폴더의 구조는 아래와 같다. GraphQL Schema 먼저 user schema와 follow schema를 정의한다.\nuser, follow schema는 TypeORM에서 정의한 Entity와 유사하다. User schema…","html":"<p>지난 번에 작성한 TypeORM 코드에 GraphQL을 추가해보자.</p>\n<h2 id=\"프로젝트-구조\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"프로젝트 구조 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 구조</h2>\n<p>프로젝트 구조는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">├── src\n│   ├── entity\n│   │   ├── Follow.ts\n│   │   └── User.ts\n│   ├── graphql\n│   ├── repository\n│   │   ├── Follower\n│   │   │   ├── FollowerRepository.test.ts\n│   │   │   └── FollowerRepository.ts\n│   │   ├── User\n│   │   │   ├── UserRepository.test.ts\n│   │   │   ├── UserRepository.ts\n│   │   │   └── index.ts\n│   │   └── index.ts\n│   ├── index.ts\n│   └── startServer.ts\n├── tsconfig.json\n├── yarn.lock\n├── README.md\n├── jest.config.js\n├── ormconfig.json\n├── ormconfigSample.json\n└── package.json</code></pre></div>\n<p>이번에 작업할 <code class=\"language-text\">graphql</code> 폴더의 구조는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">├── follow\n│   ├── followResolver.ts\n│   ├── followSchema.ts\n│   └── index.ts\n├── user\n│   ├── index.ts\n│   ├── userResolver.ts\n│   └── userSchema.ts\n└── index.ts</code></pre></div>\n<h2 id=\"graphql-schema\"><a href=\"#graphql-schema\" aria-label=\"graphql schema permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL Schema</h2>\n<p>먼저 user schema와 follow schema를 정의한다.\nuser, follow schema는 TypeORM에서 정의한 Entity와 유사하다.</p>\n<h3 id=\"user-schema\"><a href=\"#user-schema\" aria-label=\"user schema permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User schema</h3>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\">// src/graphql/user/userSchema.ts\n\nimport <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> from 'apollo-server-express';\n\nconst userSchema <span class=\"token operator\">=</span> gql`\n  extend <span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">signin</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">password</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> AuthPayload<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">me</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">user</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">users</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  extend <span class=\"token keyword\">type</span> <span class=\"token class-name\">Mutation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">signup</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">input</span><span class=\"token punctuation\">:</span> signupInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">AuthPayload</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">user</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">token</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">nickname</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">following</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Follow<span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">followers</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Follow<span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">input</span> signupInput <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">password</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">nickname</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n`;\n\nexport <span class=\"token punctuation\">{</span> userSchema <span class=\"token punctuation\">}</span>;</code></pre></div>\n<p>최소한의 행위만 구현했다.</p>\n<p>유저는 로그인을 하고, 자신의 정보를 확인할 수 있고, 다른 사용자의 정보를 확인할 수 있다. (다른 사용자의 정보를 확인하는 것은 나중에 친구만 가능하도록 변경해보자.)</p>\n<p>그리고 follower, following의 정보를 확인할 수 있다.</p>\n<p>User Type은 TypeORM에서 정의한 Entity와 유사하다.</p>\n<h3 id=\"follow-schema\"><a href=\"#follow-schema\" aria-label=\"follow schema permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Follow schema</h3>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\">// src/graphql/follow/followSchema.ts\n\nimport <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> from 'apollo-server-express';\n\nconst followSchema <span class=\"token operator\">=</span> gql`\n  extend <span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">getFollowers</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Follow<span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">getFollowing</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Follow<span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  extend <span class=\"token keyword\">type</span> <span class=\"token class-name\">Mutation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">setFollowing</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Follow<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">deleteFollowing</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Follow<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">deleteFollower</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Follow<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">checkFollower</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Follow<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">Follow</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">following</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">follower</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">checked</span><span class=\"token punctuation\">:</span> Boolean<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">updatedAt</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n`;\n\nexport <span class=\"token punctuation\">{</span> followSchema <span class=\"token punctuation\">}</span>;</code></pre></div>\n<p>유저는 회원가입을 할 수 있고, 다른 유저를 following 할 수 있다.</p>\n<p>자신의 following, follower를 삭제할 수 있고, checkFollower를 이용하여 follower들 중 확인하지 않은 대상을 확인한 대상으로 변경할 수 있다.</p>\n<h2 id=\"graphql-resolver\"><a href=\"#graphql-resolver\" aria-label=\"graphql resolver permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL Resolver</h2>\n<p>일단 프로그램을 실행하기 위해 schema에 해당하는 resolver signature만을 만들어두자.</p>\n<h3 id=\"user-resolver\"><a href=\"#user-resolver\" aria-label=\"user resolver permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>user resolver</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/graphql/user/userResolver.ts</span>\n\n<span class=\"token keyword\">const</span> userResolver <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">signin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">me</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">user</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">users</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  User<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">following</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">followers</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Mutation<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">signup</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> userResolver <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"follow-resolver\"><a href=\"#follow-resolver\" aria-label=\"follow resolver permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>follow resolver</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/graphql/follow/followResolver.ts</span>\n\n<span class=\"token keyword\">const</span> followResolver <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">getFollowers</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getFollowing</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Follow<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">following</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">follower</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Mutation<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">setFollowing</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">deleteFollowing</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">deleteFollower</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">checkFollower</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> followResolver <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>마지막으로 schema와 resolver를 각각 하나로 엮어서 Apollo Server에 전달하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/graphql/user/index.ts</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> userResolver <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./userResolver'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> userSchema <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./userSchema'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/graphql/follow/index.ts</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> followResolver <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./followResolver'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> followSchema <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./followSchema'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/graphql/index.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-server-express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> userResolver<span class=\"token punctuation\">,</span> userSchema <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./user'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> followResolver<span class=\"token punctuation\">,</span> followSchema <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./follow'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> linkSchema <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  type Query {\n    _: Boolean\n  }\n  type Mutation {\n    _: Boolean\n  }\n  type Subscription {\n    _: Boolean\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> schemas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>linkSchema<span class=\"token punctuation\">,</span> userSchema<span class=\"token punctuation\">,</span> followSchema<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>userResolver<span class=\"token punctuation\">,</span> followResolver<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> resolvers<span class=\"token punctuation\">,</span> schemas <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/startServer.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'reflect-metadata'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloServer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-server-express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> schemas<span class=\"token punctuation\">,</span> resolvers <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./graphql'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB <span class=\"token keyword\">from</span> <span class=\"token string\">'./repository'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">startServer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      typeDefs<span class=\"token punctuation\">:</span> schemas<span class=\"token punctuation\">,</span>\n      resolvers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app<span class=\"token punctuation\">,</span> cors<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server: http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>server<span class=\"token punctuation\">.</span>graphqlPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 <code class=\"language-text\">yarn dev</code>로 프로그램을 실행할 수 있다.</p>","frontmatter":{"title":"[GraphQL-TypeORM] 친구 관계 구현 - GraphQL Schema, Resolver","date":"January 22, 2020"}}},"pageContext":{"slug":"/development/2020-01-21/","previous":{"fields":{"slug":"/til/2020-01-18-til/"},"frontmatter":{"title":"2020-01-18 TIL","category":"TIL"}},"next":{"fields":{"slug":"/til/2020-01-22-til/"},"frontmatter":{"title":"2020-01-22 TIL","category":"TIL"}}}}}