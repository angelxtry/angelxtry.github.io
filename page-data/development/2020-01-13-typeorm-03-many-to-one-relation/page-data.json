{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-01-13-typeorm-03-many-to-one-relation/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"63ec6053-ab2a-5c1c-8b7e-31d74a8598e3","excerpt":"N:1 / 1:N 관계에 대해 알아보자. 사전 준비 에서 현재 코드를 볼 수 있다. 에서 boilerplate를 받아 코드를 작성해 볼 수 있다. Entity Motivation이라는 entity를 추가한다. User는 여러 가지 Motivation을 가질 수 있다. 다음의 코드가 핵심이다. 다양한 Motivation을 한 User가 가질 수 있다는 것을 으로 표현했다. 이 user는  type이고 는 실제로 User entity의 motivations라는 Column과 연결된다. User…","html":"<p>N:1 / 1:N 관계에 대해 알아보자.</p>\n<h2 id=\"사전-준비\"><a href=\"#%EC%82%AC%EC%A0%84-%EC%A4%80%EB%B9%84\" aria-label=\"사전 준비 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전 준비</h2>\n<p><code class=\"language-text\">https://github.com/angelxtry/typeorm-tutorial</code>에서 현재 코드를 볼 수 있다.</p>\n<p><code class=\"language-text\">https://github.com/angelxtry/typeorm-boilerplate.git</code>에서 boilerplate를 받아 코드를 작성해 볼 수 있다.</p>\n<h2 id=\"entity\"><a href=\"#entity\" aria-label=\"entity permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entity</h2>\n<p>Motivation이라는 entity를 추가한다. User는 여러 가지 Motivation을 가질 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/entity/Motivation.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn<span class=\"token punctuation\">,</span> ManyToOne<span class=\"token punctuation\">,</span> Column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./User'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">enum</span> MotivationEnum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">WEIGHT_INCREASE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'WEIGHT_INCREASE'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">WEIGHT_LOSS</span> <span class=\"token operator\">=</span> <span class=\"token string\">'WEIGHT_LOSS'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FIND_FRIEND</span> <span class=\"token operator\">=</span> <span class=\"token string\">'FIND_FRIEND'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">LONELINESS</span> <span class=\"token operator\">=</span> <span class=\"token string\">'LONELINESS'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Entity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Motivation</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">PrimaryGeneratedColumn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uuid'</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">ManyToOne</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> User<span class=\"token punctuation\">,</span>\n    <span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>motivations\n  <span class=\"token punctuation\">)</span>\n  user<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'enum'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span><span class=\"token punctuation\">:</span> MotivationEnum <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  motivation<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>다음의 코드가 핵심이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">@<span class=\"token function\">ManyToOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> User<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>motivations<span class=\"token punctuation\">)</span>\nuser<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">;</span></code></pre></div>\n<p>다양한 Motivation을 한 User가 가질 수 있다는 것을 <code class=\"language-text\">@ManyToOne</code>으로 표현했다.</p>\n<p>이 user는 <code class=\"language-text\">User</code> type이고 <code class=\"language-text\">user.motivations</code>는 실제로 User entity의 motivations라는 Column과 연결된다.</p>\n<p>User entity를 살펴보자.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/entity/User.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn<span class=\"token punctuation\">,</span> Column<span class=\"token punctuation\">,</span> OneToMany <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Motivation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Motivation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">enum</span> LevelEnum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">L1</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L2</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 2'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L3</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 3'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L4</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 4'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">L5</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Level 5'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Entity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">PrimaryGeneratedColumn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uuid'</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'varchar'</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'varchar'</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  nickname<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'enum'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span><span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">L1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  level<span class=\"token punctuation\">:</span> LevelEnum<span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  @<span class=\"token function\">OneToMany</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Motivation<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token parameter\">motivation</span> <span class=\"token operator\">=></span> motivation<span class=\"token punctuation\">.</span>user</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  motivations<span class=\"token punctuation\">:</span> Motivation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>User entity는 motivations가 새로 추가되었다.</p>\n<p>한 User가 다양한 Motivation을 가질 수 있다는 것을 표현한다. 그래서 motivations는 <code class=\"language-text\">Motivation[]</code> type이다. 괄호 안의 motivation.user는 실제 Motivation entity의 user를 의미한다.</p>\n<p>여기까지 작성한 후 <code class=\"language-text\">yarn start</code>로 프로그램을 실행하여 생성된 테이블을 확인해보자.</p>\n<h2 id=\"db-table-확인\"><a href=\"#db-table-%ED%99%95%EC%9D%B8\" aria-label=\"db table 확인 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB Table 확인</h2>\n<p>DB를 확인해보면 user, motivation 2개의 테이블이 생성되었다.</p>\n<p><code class=\"language-text\">OneToMany</code> 컬럼이 설정된 user 테이블에는 motivations라는 컬럼이 없다.</p>\n<p>motivation 테이블에는 <code class=\"language-text\">ManyToOne</code>으로 설정된 user와 관련이 있는 듯한 <code class=\"language-text\">userId</code>라는 컬럼이 존재한다.</p>\n<p>테이블 정보를 보면 userId 컬럼은 user 테이블의 id와 연결되어 foreign key로 설정된 것을 확인할 수 있다.</p>\n<p>1:N 구조일 때 entity의 코드만 보면 양쪽 테이블에 모두 컬럼이 생성될 것 처럼 보이지만, <strong>N쪽의 테이블에만 컬럼이 생성</strong>된다.</p>\n<h2 id=\"test-환경-설정\"><a href=\"#test-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-label=\"test 환경 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test 환경 설정</h2>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">yarn add -D jest ts-jest @types/jest\n\nyarn ts-jest config:init</code></pre></div>\n<p>jest.config.js 파일이 생성된다.</p>\n<p>기존에 index.ts에 있던 user 샘플 데이터는 fakeUser.ts 파일을 만들어서 옮겨 놓자.</p>\n<h2 id=\"repository\"><a href=\"#repository\" aria-label=\"repository permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repository</h2>\n<p>user 때와는 다르게 다음과 같이 폴더와 파일을 생성한다.</p>\n<p><code class=\"language-text\">src/repository/MotivationRepository/index.ts</code></p>\n<p><code class=\"language-text\">src/repository/MotivationRepository/MotivationRepository.test.ts</code></p>\n<p>테스트를 작성하면서 필수 코드도 만들어보자.</p>\n<p>먼저 특정 User는 motivation을 등록할 수 있다.</p>\n<p>user를 하나 생성하고, motivation을 2개 추가하고, 해당 user로 User 데이터를 조회하여 확인한다.</p>\n<p>motivation 추가는 Motivation Repository에, user 데이터를 조회할 때 motivation 데이터까지 함께 조회하는 메서드는 User Repository에 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/MotivationRepository.test.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  getUserRepository<span class=\"token punctuation\">,</span>\n  getMotivationRepository<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../database'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> users <span class=\"token keyword\">from</span> <span class=\"token string\">'../../fakeUser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MotivationEnum <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Motivation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> conn<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  conn <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">afterAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Motivation Repostory'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'특정 User는 motivation을 등록할 수 있다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// user를 하나 생성하고</span>\n    <span class=\"token comment\">// motivation을 2개 추가하고 &lt;- 추가하는 메서드 작성</span>\n    <span class=\"token comment\">// 해당 user로 User 데이터를 조회하여 확인한다. &lt;- 조회 메서드 작성</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> motivations <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">FIND_FRIEND</span><span class=\"token punctuation\">,</span> MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">LONELINESS</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getMotivationRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span>\n      user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      motivations<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>일단 여기서 에러가 발생한다. 에러를 처리하기 위해 <code class=\"language-text\">saveByUserId()</code> 메서드를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/index.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Motivation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Motivation'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../database'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Motivation<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MotivationRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Motivation<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 특정 user의 motivation을 저장.</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userId<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> motivations<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> userId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// console.log('saveByUserId: ', motivations);</span>\n      <span class=\"token keyword\">const</span> motivationInstances <span class=\"token operator\">=</span> motivations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> motivation<span class=\"token punctuation\">:</span> m <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>motivationInstances<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Motivation entity에 데이터를 저장하기 위해 Motivation instance를 생성한다. user는 User type이므로 User instance를 생성하여 인자로 전달한다.</p>\n<p>save()를 실행하면 해당 결과가 리턴된다.</p>\n<p>test에서 log를 확인한 후 test를 계속 작성한다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/MotivationRepository.test.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  getUserRepository<span class=\"token punctuation\">,</span>\n  getMotivationRepository<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../database'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> users <span class=\"token keyword\">from</span> <span class=\"token string\">'../../fakeUser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MotivationEnum <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Motivation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> conn<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  conn <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">afterAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Motivation Repostory'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'특정 User는 motivation을 등록할 수 있다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// user를 하나 생성하고</span>\n    <span class=\"token comment\">// motivation을 2개 추가하고 &lt;- 추가하는 메서드 작성</span>\n    <span class=\"token comment\">// 해당 user로 User 데이터를 조회하여 확인한다. &lt;- 조회 메서드 작성</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> motivations <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">FIND_FRIEND</span><span class=\"token punctuation\">,</span> MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">LONELINESS</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">await</span> <span class=\"token function\">getMotivationRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> motivations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> currentUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      where<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      relations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'motivations'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> User<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currentUser<span class=\"token punctuation\">.</span>motivations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>User entity를 조회하여 저장한 motivation을 확인한다. User entity에 선언한 motivations는 실제로 user 테이블에 컬럼이 존재하지는 않지만, relations라는 키워드를 이용하여 조회할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"query\"><pre class=\"language-query\"><code class=\"language-query\">SELECT\n`User`.`id` AS `User_id`,\n`User`.`email` AS `User_email`,\n`User`.`nickname` AS `User_nickname`,\n`User`.`level` AS `User_level`,\n`User__motivations`.`id` AS `User__motivations_id`,\n`User__motivations`.`motivation` AS `User__motivations_motivation`,\n`User__motivations`.`userId` AS `User__motivations_userId`\nFROM `user` `User`\nLEFT JOIN `motivation` `User__motivations`\n  ON `User__motivations`.`userId`=`User`.`id`\nWHERE (`User`.`id` = ?) AND `User`.`id` IN (?)</code></pre></div>\n<p>확인해보면 motivation 테이블과 LEFT JOIN으로 엮어서 query를 실행한다.</p>\n<p>이 로직은 계속 사용될 것이기에 User Repository로 옮긴다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/UserRepository.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../entity/User'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserInfo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../types'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userInfo<span class=\"token punctuation\">:</span> UserInfo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>userInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">createUsers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">usersInfo<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>UserInfo<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>usersInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findByEmail</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">async</span> <span class=\"token function\">findByUserId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userId<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      where<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> userId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      relations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'motivations'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> user <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>다시 test로 돌아와서 마무리를 짓는다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/MotivationRepository.test.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/User'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  getUserRepository<span class=\"token punctuation\">,</span>\n  getMotivationRepository<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../database'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> users <span class=\"token keyword\">from</span> <span class=\"token string\">'../../fakeUser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MotivationEnum <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Motivation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> conn<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  conn <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">afterAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Motivation Repostory'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'특정 User는 motivation을 등록할 수 있다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// user를 하나 생성하고</span>\n    <span class=\"token comment\">// motivation을 2개 추가하고 &lt;- 추가하는 메서드 작성</span>\n    <span class=\"token comment\">// 해당 user로 User 데이터를 조회하여 확인한다. &lt;- 조회 메서드 작성</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> motivations <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">FIND_FRIEND</span><span class=\"token punctuation\">,</span> MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">LONELINESS</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">getMotivationRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> motivations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> currentUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByUserId</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      user<span class=\"token punctuation\">.</span>id</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> User<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> currentUser<span class=\"token punctuation\">.</span>motivations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span> m<span class=\"token punctuation\">.</span>motivation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>motivations<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>테스트를 하나 더 추가한다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/MotivationRepository.test.ts</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Motivation Repostory'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'motivation을 다시 등록하면 기존 데이터는 삭제되고 신규 데이터가 저장된다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// user를 하나 생성하고</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// motivation을 2개 추가하고</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 다른 motivation을 저장한다.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 해당 user로 조회하여 확인한다. &lt;- 조회 메서드 작성</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> motivations1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">FIND_FRIEND</span><span class=\"token punctuation\">,</span> MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">LONELINESS</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">await</span> <span class=\"token function\">getMotivationRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> motivations1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> motivations2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">WEIGHT_INCREASE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">await</span> <span class=\"token function\">getMotivationRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> motivations2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> currentUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> User<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> currentUser<span class=\"token punctuation\">.</span>motivations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span> m<span class=\"token punctuation\">.</span>motivation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>motivations2<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>motivation을 저장하고, 다른 motivation을 다시 저장하면 뒤에 저장한 motivation만 남도록 로직을 변경한다. 테스트는 물론 실패한다.</p>\n<p>로직을 추가하자.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/index.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Motivation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Motivation'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../database'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Motivation<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MotivationRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Motivation<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 특정 user의 motivation을 저장.</span>\n  <span class=\"token comment\">// user의 기존 motivation을 삭제하고 저장.</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userId<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> motivations<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> userId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> motivationInstances <span class=\"token operator\">=</span> motivations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> motivation<span class=\"token punctuation\">:</span> m <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>motivationInstances<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> error<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"transaction\"><a href=\"#transaction\" aria-label=\"transaction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transaction</h2>\n<p>delete와 save는 transaction을 적용하여 모두 성공하거나 하나가 실패하면 모두 실행하지 않아야 한다.</p>\n<p>먼저 테스트 코드 부터 작성한다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/MotivationRepository.test.ts</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Motivation Repostory'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'motivation 재등록이 실패하면 기존 데이터가 유지된다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// user를 하나 생성하고</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// motivation을 1개 추가하고</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 다시 motivation을 저장할 때는 실패.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 해당 user로 조회하여 처음 motivation이 유지되는지 확인한다.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> motivations1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">FIND_FRIEND</span><span class=\"token punctuation\">,</span> MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">LONELINESS</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">await</span> <span class=\"token function\">getMotivationRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> motivations1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> motivations2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>MotivationEnum<span class=\"token punctuation\">.</span><span class=\"token constant\">WEIGHT_INCREASE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">await</span> <span class=\"token function\">getMotivationRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ABC'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> currentUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByUserId</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> User<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> currentUser<span class=\"token punctuation\">.</span>motivations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span> m<span class=\"token punctuation\">.</span>motivation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>motivations1<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>2번째 motivation을 저장할 때 <code class=\"language-text\">[&#39;ABC&#39;]</code>라는 값을 전달했다. motivation 컬럼에 저장될 수 없는 값이므로 에러가 발생할 것이다. 이때 transaction이 없다면 데이터가 삭제만 된 채로 남아있게 된다.</p>\n<p>그래서 transaction을 적용한다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/index.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository<span class=\"token punctuation\">,</span> getManager <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Motivation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Motivation'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../database'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Motivation<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MotivationRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Motivation<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 특정 user의 motivation을 저장.</span>\n  <span class=\"token comment\">// user의 기존 motivation을 삭제하고 저장.</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userId<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> motivations<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> userId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> motivationInstances <span class=\"token operator\">=</span> motivations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> motivation<span class=\"token punctuation\">:</span> m <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">async</span> <span class=\"token parameter\">transactionalEntityManager</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token keyword\">await</span> transactionalEntityManager<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span>Motivation<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token keyword\">await</span> transactionalEntityManager<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>motivationInstances<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// console.log(error);</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Motivation save error.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 코드가 실행된 query를 확인해보자.</p>\n<p>삭제, 저장이 순서대로 잘 진행 될 경우 다음과 같은 query를 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"query\"><pre class=\"language-query\"><code class=\"language-query\">query: START TRANSACTION\n\nquery: DELETE FROM `motivation` WHERE `userId` = ? -- PARAMETERS: [&quot;bce40372-1389-480f-af2d-e0b4f7f58c46&quot;]\n\nquery: INSERT INTO `motivation`(`id`, `motivation`, `userId`) VALUES (?, ?, ?)\n-- PARAMETERS: [&quot;f7c34202-d071-4258-afbb-8f8110a0f1b6&quot;,&quot;FIND_FRIEND&quot;,&quot;bce40372-1389-480f-af2d-e0b4f7f58c46&quot;]\n\nquery: INSERT INTO `motivation`(`id`, `motivation`, `userId`) VALUES (?, ?, ?)\n-- PARAMETERS: [&quot;8ebff72b-3728-4f83-99cc-8108573aa226&quot;,&quot;LONELINESS&quot;,&quot;bce40372-1389-480f-af2d-e0b4f7f58c46&quot;]\n\nquery: COMMIT</code></pre></div>\n<p>실패하면?</p>\n<div class=\"gatsby-highlight\" data-language=\"query\"><pre class=\"language-query\"><code class=\"language-query\">query: START TRANSACTION\n\nquery: DELETE FROM `motivation` WHERE `userId` = ? -- PARAMETERS: [&quot;bce40372-1389-480f-af2d-e0b4f7f58c46&quot;]\n\nquery: INSERT INTO `motivation`(`id`, `motivation`, `userId`) VALUES (?, ?, ?)\n-- PARAMETERS: [&quot;d5ba3a34-6953-47c5-9dce-241b95c6f616&quot;,&quot;ABC&quot;,&quot;bce40372-1389-480f-af2d-e0b4f7f58c46&quot;]\n\nquery failed: INSERT INTO `motivation`(`id`, `motivation`, `userId`) VALUES (?, ?, ?)\n-- PARAMETERS: [&quot;d5ba3a34-6953-47c5-9dce-241b95c6f616&quot;,&quot;ABC&quot;,&quot;bce40372-1389-480f-af2d-e0b4f7f58c46&quot;]\n\nquery: ROLLBACK</code></pre></div>\n<h2 id=\"type-하나-더-추가\"><a href=\"#type-%ED%95%98%EB%82%98-%EB%8D%94-%EC%B6%94%EA%B0%80\" aria-label=\"type 하나 더 추가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>type 하나 더 추가</h2>\n<p>transaction을 적용한 후에 생각난 건데 motivaion인자의 type을 확인하면 삭제, 저장 로직이 도달하기 전에 문제를 확인할 수 있을 것 같았다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/MotivationRepository/index.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository<span class=\"token punctuation\">,</span> getManager <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Motivation<span class=\"token punctuation\">,</span> MotivationEnum <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Motivation'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../database'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Motivation<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MotivationRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Motivation<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 특정 user의 motivation을 저장.</span>\n  <span class=\"token comment\">// user의 기존 motivation을 삭제하고 저장.</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">async</span> <span class=\"token function\">saveByUserId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userId<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> motivations<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>MotivationEnum<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> userId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> motivationInstances <span class=\"token operator\">=</span> motivations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> motivation<span class=\"token punctuation\">:</span> m <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">async</span> <span class=\"token parameter\">transactionalEntityManager</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">await</span> transactionalEntityManager<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span>Motivation<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">await</span> transactionalEntityManager<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>motivationInstances<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// console.log(error);</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Motivation save error.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 변경하는 순간 test code의 <code class=\"language-text\">[&#39;ABC&#39;]</code>에서 <code class=\"language-text\">Type &#39;string&#39; is not assignable to type &#39;MotivationEnum&#39;.ts(2322)</code> 같은 오류 메시지가 표시되고 테스트를 시도하기 전에 오류를 확인할 수 있다. 굿!</p>\n<p>오늘은 여기까지!</p>","frontmatter":{"title":"2020-01-13 TypeORM - 03. Many-to-one / one-to-many relations","date":"January 13, 2020"}}},"pageContext":{"slug":"/development/2020-01-13-typeorm-03-many-to-one-relation/","previous":{"fields":{"slug":"/development/2020-01-09-typeorm-02-CRUD/"},"frontmatter":{"title":"2020-01-09 TypeORM - 02 CRUD","category":"development"}},"next":{"fields":{"slug":"/til/2020-01-14-til/"},"frontmatter":{"title":"2020-01-14 TIL","category":"TIL"}}}}}