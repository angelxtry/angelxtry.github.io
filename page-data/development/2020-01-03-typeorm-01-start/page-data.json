{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-01-03-typeorm-01-start/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9508f8bc-b1ca-5c37-9b62-e606a2a5407e","excerpt":"TypeORM의 기본 사용법과 사용했던 경험을 적어보려고 한다. 설치 일단 global에 설치한다. 폴더를 생성하고 해당 폴더에서 초기화를 실행한다. src 폴더와 ​package.json, ormconfig.json, tsconfig.json 파일 등이 생성된다. package.json 파일의 devDependencies, dependencies 항목은 모두 삭제하고 다시 설치한다. package 설치 .prettierrc, .eslintrc.js, tsconfig.json…","html":"<p>TypeORM의 기본 사용법과 사용했던 경험을 적어보려고 한다.</p>\n<h2 id=\"설치\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h2>\n<p>일단 global에 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">yarn add typeorm -g</code></pre></div>\n<p>폴더를 생성하고 해당 폴더에서 초기화를 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">mkdir typeorm-boilerplate\ncd typeorm-boilerplate\ntypeorm init</code></pre></div>\n<p>src 폴더와 ​package.json, ormconfig.json, tsconfig.json 파일 등이 생성된다.</p>\n<p>package.json 파일의 devDependencies, dependencies 항목은 모두 삭제하고 다시 설치한다.</p>\n<h2 id=\"package-설치\"><a href=\"#package-%EC%84%A4%EC%B9%98\" aria-label=\"package 설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">yarn add typeorm reflect-metadata mysql2 dotenv\n\nyarn add -D ts-node @types/node typescript @types/dotenv\n\nyarn add -D eslint eslint-config-airbnb-base eslint-plugin-import\n\nyarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser</code></pre></div>\n<p>.prettierrc, .eslintrc.js, tsconfig.json 파일을 복사하자.</p>\n<p><a href=\"https://github.com/angelxtry/typeorm-boilerplate\">git repo</a>를 참고하자.</p>\n<p>ormconfig.json 파일에서 username, password, database를 적절히 입력하고 database를 직접 만들어야 한다.</p>\n<p>mysql이든 postgres든 DB에 접속해서 database를 만들자.</p>\n<p>여기까지 진행했다면 <code class=\"language-text\">typeorm init</code>으로 자동 생성되었던 src 폴더의 코드를 실행 할 수 있다. yarn start를 실행하면 user 테이블이 생성되고 data 1건이 저장된다.</p>\n<h2 id=\"entity-수정\"><a href=\"#entity-%EC%88%98%EC%A0%95\" aria-label=\"entity 수정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entity 수정</h2>\n<p><code class=\"language-text\">src/entity/User.ts</code></p>\n<p>작성되어 있던 코드를 지우고 다시 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn<span class=\"token punctuation\">,</span> Column <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">enum</span> OpenImageChoice <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">OPEN</span> <span class=\"token operator\">=</span> <span class=\"token string\">'OPEN'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FRIEND</span> <span class=\"token operator\">=</span> <span class=\"token string\">'FRIEND'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">CLOSE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'CLOSE'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Entity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">PrimaryGeneratedColumn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uuid'</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'varchar'</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'enum'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">enum</span><span class=\"token punctuation\">:</span> OpenImageChoice<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> OpenImageChoice<span class=\"token punctuation\">.</span><span class=\"token constant\">OPEN</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  openImageChoice<span class=\"token punctuation\">:</span> OpenImageChoice<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>entity 파일은 테이블과 직결된다</p>\n<h2 id=\"repository-생성\"><a href=\"#repository-%EC%83%9D%EC%84%B1\" aria-label=\"repository 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repository 생성</h2>\n<p><code class=\"language-text\">src/repository</code> 폴더를 생성한다.</p>\n<p><code class=\"language-text\">src/repository/index.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getConnectionOptions<span class=\"token punctuation\">,</span> createConnection<span class=\"token punctuation\">,</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> connection<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">connectDB</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> connectionOptions <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getConnectionOptions</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  connection <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">createConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>connectionOptions<span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> connection<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> connectDB<span class=\"token punctuation\">;</span></code></pre></div>\n<p>getConnectionOptions 함수는 NODE_ENV에 따라 ormconfig.json 파일에서 환경 변수를 읽어온다.</p>\n<p>createConnection 함수를 실행할 때 <code class=\"language-text\">name: &#39;default&#39;</code>가 꼭 필요하다.</p>\n<p><code class=\"language-text\">src/repository/UserRepository.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../entity/User'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">createByEmail</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>User entity를 사용하는 UserRepository를 생성했다. 그리고 createByEmail이라는 메서드를 만들었다. 앞으로 User entity를 사용하는 메서드들은 모두 UserRepository에 추가한다.</p>\n<p>this.create는 object를 인자로 받아 User instance를 생성한다. 이 User instance를 this.save로 User 테이블에 insert 한다.</p>\n<p>이 UserRepository를 사용하기 위해 <code class=\"language-text\">repository/index.ts</code>에 다음의 코드를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getConnectionOptions<span class=\"token punctuation\">,</span> createConnection<span class=\"token punctuation\">,</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./UserRepository'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> connection<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">connectDB</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> connectionOptions <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getConnectionOptions</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  connection <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">createConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>connectionOptions<span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> connection<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getUserRepository <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">UserRepository</span> <span class=\"token operator\">=></span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">getCustomRepository</span><span class=\"token punctuation\">(</span>UserRepository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> connectDB<span class=\"token punctuation\">;</span></code></pre></div>\n<p>마지막으로 <code class=\"language-text\">index.ts</code> 파일을 다음과 같이 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token string\">'reflect-metadata'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./repository'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">startServer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> newUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createByEmail</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aaa@gmail.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>실행하기 위해 package.json의 script를 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=development ts-node src/index.ts\"</span></code></pre></div>\n<p>yarn start로 실행하면 다음과 같은 결과가 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">User <span class=\"token punctuation\">{</span>\n  email<span class=\"token punctuation\">:</span> <span class=\"token string\">'aaa@gmail.com'</span><span class=\"token punctuation\">,</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token string\">'8cf9e6f8-3531-4199-b52f-a77b67f76128'</span><span class=\"token punctuation\">,</span>\n  openImageChoice<span class=\"token punctuation\">:</span> <span class=\"token string\">'OPEN'</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"느낀-점\"><a href=\"#%EB%8A%90%EB%82%80-%EC%A0%90\" aria-label=\"느낀 점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느낀 점</h2>\n<p>아직 충분히 사용해보지 못해 Sequelize와 우열을 가르지는 못하겠다. 그래도 Sequelize보다 훨씬 더 깔끔한 느낌이다. Sequelize는 query가 길어지거나 복잡해지면 코드가 급격히 지저분해 졌는데 TypeORM은 일정 수준의 깔끔함(?)을 유지하는 것 같다.</p>\n<p>Entity의 instance를 다루는 것이 아직 익숙하지 않지만 차차 익숙해질 것 같다. 계속 사용하면서 글을 써보자.</p>\n<h2 id=\"code-classlanguage-textormconfigjsoncode\"><a href=\"#code-classlanguage-textormconfigjsoncode\" aria-label=\"code classlanguage textormconfigjsoncode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">ormconfig.json</code></h2>\n<p>development, test, production을 구분하여 설정하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"synchronize\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"logging\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"entities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/entity/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"migrations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/migration/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"subscribers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/subscriber/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"cli\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"entitiesDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/entity\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"migrationsDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/migration\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"subscribersDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/subscriber\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"synchronize\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"logging\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dropSchema\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"entities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/entity/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"migrations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/migration/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"subscribers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/subscriber/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"cli\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"entitiesDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/entity\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"migrationsDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/migration\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"subscribersDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/subscriber\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"synchronize\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"logging\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"entities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/entity/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"migrations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/migration/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"subscribers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/subscriber/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"cli\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"entitiesDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/entity\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"migrationsDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/migration\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"subscribersDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/subscriber\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>name과 database, logging, dropSchema 등을 상황에 맞게 조정하자.</p>\n<p>name을 위와 같이 지정했다면 앞으로 package.json의 script에 NODE_ENV 항목을 꼭 추가하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=development ts-node src/index.ts\"</span></code></pre></div>","frontmatter":{"title":"2020-01-03 TypeORM - 01 Start","date":"January 04, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/development/2020-01-03-typeorm-01-start/","previous":{"fields":{"slug":"/development/2020-01-03-pm2/"},"frontmatter":{"title":"2020-01-03 pm2","category":"development"}},"next":{"fields":{"slug":"/til/2020-01-04-til/"},"frontmatter":{"title":"2020-01-04 TIL","category":"TIL"}}}}}