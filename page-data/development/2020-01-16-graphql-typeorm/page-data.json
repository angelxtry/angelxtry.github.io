{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-01-16-graphql-typeorm/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d6a04768-2471-56af-abfe-e9e16a4b6c2b","excerpt":"(2020-01-20 Follow, User entity 수정) TypeORM Boilerplate와 GraphQL Boilerplate를 하나로 합쳤다. TypeORM Boilerplate를 base로 하고 GraphQL에 필요한 package를 설치한다. 프로젝트 구조 modules에 GraphQL 관련 파일들이 추가될 것이다. 이번에는 TypeORM에만 집중할 예정이라 생략한다. Entity 생성 친구 신청은 follow 관계와 유사하다. A가 B에게 친구 신청을 하는 것은 A가 B…","html":"<p>(2020-01-20 Follow, User entity 수정)</p>\n<p>TypeORM Boilerplate와 GraphQL Boilerplate를 하나로 합쳤다.</p>\n<p>TypeORM Boilerplate를 base로 하고 GraphQL에 필요한 package를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">yarn add graphql apollo-server-express express</code></pre></div>\n<h2 id=\"프로젝트-구조\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"프로젝트 구조 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 구조</h2>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">├── README.md\n├── jest.config.js\n├── ormconfig.json\n├── ormconfigSample.json\n├── package.json\n├── src\n│   ├── entity\n│   │   ├── Follow.ts\n│   │   └── User.ts\n│   ├── fakeData.ts\n│   ├── index.ts\n│   ├── modules\n│   ├── repository\n│   │   ├── Follower\n│   │   │   ├── FollowerRepository.test.ts\n│   │   │   └── FollowerRepository.ts\n│   │   ├── User\n│   │   │   ├── UserRepository.test.ts\n│   │   │   ├── UserRepository.ts\n│   │   │   └── index.ts\n│   │   └── index.ts\n│   ├── resolvers.ts\n│   ├── schemas.ts\n│   └── startServer.ts\n├── tsconfig.json\n└── yarn.lock</code></pre></div>\n<p>modules에 GraphQL 관련 파일들이 추가될 것이다. 이번에는 TypeORM에만 집중할 예정이라 생략한다.</p>\n<h2 id=\"entity-생성\"><a href=\"#entity-%EC%83%9D%EC%84%B1\" aria-label=\"entity 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entity 생성</h2>\n<p>친구 신청은 follow 관계와 유사하다. A가 B에게 친구 신청을 하는 것은 A가 B를 following 하는 것과 동일하다. B 입장에서는 A가 follower가 된다. B는 자신의 follower 중에서 친구 신청을 승인할 수 있다.</p>\n<p>follow를 구현하기 위해 User entity와 Follow entity를 생성한다.</p>\n<p>검색해보면 TypeORM으로 follow를 구현할 때 User entity만으로 처리하는 것을 많이 볼 수 있다.(이 내용도 나중에 글로 쓸 계획이다.) 이번에 이렇게 처리하지 않은 것은 다음의 요건들 때문이다.</p>\n<ul>\n<li>user는 follower들을 친구 신청한 시간으로 정렬할 수 있다.</li>\n<li>user가 친구 신청을 확인한 follower와 확인하지 않은 follwer는 다르게 표시된다.</li>\n</ul>\n<p>TypeORM에서 얘기하는 “adjacency list” pattern으로 구현하면 간단하게 처리할 수 있지만 위의 2가지 요건을 처리할 수 있는 방식을 찾지 못했다. 그래서 Follow entity를 추가로 만든다.</p>\n<h3 id=\"user-entity\"><a href=\"#user-entity\" aria-label=\"user entity permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User entity</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn<span class=\"token punctuation\">,</span> Column<span class=\"token punctuation\">,</span> OneToMany <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Follow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Follow'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Entity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">PrimaryGeneratedColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'varchar'</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'varchar'</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  nickname<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">OneToMany</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Follow<span class=\"token punctuation\">,</span>\n    <span class=\"token parameter\">follow</span> <span class=\"token operator\">=></span> follow<span class=\"token punctuation\">.</span>following\n  <span class=\"token punctuation\">)</span>\n  following<span class=\"token punctuation\">:</span> Follow<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">OneToMany</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Follow<span class=\"token punctuation\">,</span>\n    <span class=\"token parameter\">follow</span> <span class=\"token operator\">=></span> follow<span class=\"token punctuation\">.</span>follower\n  <span class=\"token punctuation\">)</span>\n  followers<span class=\"token punctuation\">:</span> Follow<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>User entity에 following, follwers를 추가하여 follow entity와 연결한다.</p>\n<p>following은 내가 follow 한 유저들을 의미한다. follow 테이블에서 follower가 나(me)인 데이터를 선택하면 된다.</p>\n<p>followers는 나를 follow 한 유저들을 의미한다. follow 테이블에서 following이 나(me)인 데이터를 선택하면 된다.</p>\n<h3 id=\"follow-entity\"><a href=\"#follow-entity\" aria-label=\"follow entity permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Follow entity</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Entity<span class=\"token punctuation\">,</span>\n  PrimaryGeneratedColumn<span class=\"token punctuation\">,</span>\n  ManyToOne<span class=\"token punctuation\">,</span>\n  CreateDateColumn<span class=\"token punctuation\">,</span>\n  Column<span class=\"token punctuation\">,</span>\n  UpdateDateColumn<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./User'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Entity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Follow</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">PrimaryGeneratedColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">ManyToOne</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> User<span class=\"token punctuation\">,</span>\n    <span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>following\n  <span class=\"token punctuation\">)</span>\n  following<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">ManyToOne</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> User<span class=\"token punctuation\">,</span>\n    <span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>followers\n  <span class=\"token punctuation\">)</span>\n  follower<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> Boolean<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  checked<span class=\"token punctuation\">:</span> Boolean<span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">CreateDateColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  createdAt<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">;</span>\n\n  @<span class=\"token function\">UpdateDateColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  updatedAt<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>following, follower는 User entity와 ManyToOne으로 연결된다.</p>\n<p>A, B, C 라는 유저가 있고 A가 C를 following하고, B도 C를 following 한다고 해보자. Follow entity에는 다음과 같이 저장된다.</p>\n<table>\n<thead>\n<tr>\n<th>following</th>\n<th>follower</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C</td>\n<td>A</td>\n</tr>\n<tr>\n<td>C</td>\n<td>B</td>\n</tr>\n</tbody>\n</table>\n<p>친구 신청으로 createdAt으로, 신청 확인은 checked로 처리한다.</p>\n<h2 id=\"repository\"><a href=\"#repository\" aria-label=\"repository permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repository</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/index.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getConnectionOptions<span class=\"token punctuation\">,</span> createConnection<span class=\"token punctuation\">,</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./User'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FollowerRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Follower/FollowerRepository'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> connection<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">connectDB</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> connectionOptions <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getConnectionOptions</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  connection <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">createConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>connectionOptions<span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> connection<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getUserRepository <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">UserRepository</span> <span class=\"token operator\">=></span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">getCustomRepository</span><span class=\"token punctuation\">(</span>UserRepository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getFollowerRepository <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">FollowerRepository</span> <span class=\"token operator\">=></span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">getCustomRepository</span><span class=\"token punctuation\">(</span>FollowerRepository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> connectDB<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"user-repository\"><a href=\"#user-repository\" aria-label=\"user repository permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User Repository</h3>\n<p>테스트 코드 부터 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/User/UserRepository.test.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> conn<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  conn <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">afterAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User 생성'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email, nickname을 인자로 전달하여 user를 생성한다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> email <span class=\"token operator\">=</span> <span class=\"token string\">'abc@gmail.com'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> nickname <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> nickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>User는 상세한 테스트를 작성하지 않고 여기까지만.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/User/UserRepository.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/User'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> nickname<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">,</span> nickname <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>UserRepository도 일단 addUser만 작성한다.</p>\n<h3 id=\"follow-repository\"><a href=\"#follow-repository\" aria-label=\"follow repository permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Follow Repository</h3>\n<p>test를 하나씩 추가하면서 Repository의 메서드를 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.test.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Follow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Follow'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> connectDB<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> getUserRepository<span class=\"token punctuation\">,</span> getFollowerRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> conn<span class=\"token punctuation\">:</span> Connection<span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  conn <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">connectDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> aaaEmail <span class=\"token operator\">=</span> <span class=\"token string\">'aaa@gmail.com'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> aaaNickname <span class=\"token operator\">=</span> <span class=\"token string\">'aaa'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bbbEmail <span class=\"token operator\">=</span> <span class=\"token string\">'bbb@gmail.com'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bbbNickname <span class=\"token operator\">=</span> <span class=\"token string\">'bbb'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'following test'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aaa가 bbb를 following 하면, 리턴값을 aaa의 Follow instance다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> aaa <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>aaaEmail<span class=\"token punctuation\">,</span> aaaNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bbb <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>bbbEmail<span class=\"token punctuation\">,</span> bbbNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> follow <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>\n      aaa<span class=\"token punctuation\">,</span>\n      bbb\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Follow<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">.</span>follower<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">.</span>following<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>bbb<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>\n      expect<span class=\"token punctuation\">.</span><span class=\"token function\">arrayContaining</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'following'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'follower'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'checked'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'createdAt'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'updatedAt'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>a, b user를 추가하고 a가 b를 following 한다. followingUser 메서드는 a의 follow instance를 리턴한다. 여기서 먼저 실행 코드를 확인해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EntityRepository<span class=\"token punctuation\">,</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Follow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/Follow'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../entity/User'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getUserRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Follow<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FollowerRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Follow<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">me<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">,</span> following<span class=\"token punctuation\">:</span> User</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> follow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> following<span class=\"token punctuation\">,</span> follower<span class=\"token punctuation\">:</span> me <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>followingUser 메서드는 me, following을 인자로 받아 Follow instance를 생성하여 Follow 테이블에 저장한다.</p>\n<p>리턴값을 출력해보면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">Follow {\n  following: User { id: 2, email: &#39;bbb@gmail.com&#39;, nickname: &#39;bbb&#39; },\n  follower: User { id: 1, email: &#39;aaa@gmail.com&#39;, nickname: &#39;aaa&#39; },\n  id: 1,\n  checked: false,\n  createdAt: 2020-01-16T15:28:09.478Z,\n  updatedAt: 2020-01-16T15:28:09.478Z\n}</code></pre></div>\n<p>a가 b를 following 하는 것을 표현한다.</p>\n<p>테스트를 추가하면서 로직을 보완하면 다음과 같은 코드가 나온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.ts</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Follow<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FollowerRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Follow<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">me<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">,</span> following<span class=\"token punctuation\">:</span> User</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> following<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> checkMe <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasId</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> checkFollowing <span class=\"token operator\">=</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasId</span><span class=\"token punctuation\">(</span>following<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>checkMe <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>checkFollowing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> follow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> following<span class=\"token punctuation\">,</span> follower<span class=\"token punctuation\">:</span> me <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> existFollow <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>existFollow<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.test.ts</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aaa가 bbb를 following 한 후 다시 following 하면 null을 리턴한다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> aaa <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>aaaEmail<span class=\"token punctuation\">,</span> aaaNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> bbb <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>bbbEmail<span class=\"token punctuation\">,</span> bbbNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> follow <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>\n    aaa<span class=\"token punctuation\">,</span>\n    bbb\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Follow<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">.</span>follower<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>follow<span class=\"token punctuation\">.</span>following<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>bbb<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 이미 following 한 유저를 following하면 null</span>\n  <span class=\"token keyword\">const</span> refollow <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">,</span> bbb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>refollow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeNull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> followersOfbbb <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFollowers</span><span class=\"token punctuation\">(</span>bbb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followersOfbbb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followersOfbbb<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>follower<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>aaa<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같은 테스트를 통과하기 위해 getFollowers라는 메서드를 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.ts</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Follow<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FollowerRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Follow<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">getFollowers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">following<span class=\"token punctuation\">:</span> User</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> followers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      where<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> following <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      relations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'follower'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'following'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> followers<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>getFollowers 메서드는 following user를 기준으로 follow instance를 조회한다. 이 때 realtions 옵션으로 User entity와 연결되어 있는 follow entity의 두 컬럼을 지정하면 user 테이블이 follow 테이블에 left join으로 연결된다. query를 확인해보면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow_id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>checked<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow_checked<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>createdAt<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow_createdAt<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>updatedAt<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow_updatedAt<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>followingId<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow_followingId<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>followerId<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow_followerId<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow__follower<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow__follower_id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow__follower<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>email<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow__follower_email<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow__follower<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>nickname<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow__follower_nickname<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow__following<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow__following_id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow__following<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>email<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow__following_email<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">`</span>Follow__following<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>nickname<span class=\"token punctuation\">`</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">`</span>Follow__following_nickname<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">`</span>follow<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">`</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">`</span> <span class=\"token punctuation\">`</span>Follow__follower<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">`</span>Follow__follower<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token operator\">=</span><span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>followerId<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">`</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">`</span> <span class=\"token punctuation\">`</span>Follow__following<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">`</span>Follow__following<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token operator\">=</span><span class=\"token punctuation\">`</span>Follow<span class=\"token punctuation\">`</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">`</span>followingId<span class=\"token punctuation\">`</span></code></pre></div>\n<p>반대로 유저가 following 하는 대상을 조회하기 위해 다음과 같이 테스트를 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.test.ts</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aaa가 bbb, ccc를 following 하면 aaa의 following는 User[2]를 리턴한다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> aaa <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>aaaEmail<span class=\"token punctuation\">,</span> aaaNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> bbb <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>bbbEmail<span class=\"token punctuation\">,</span> bbbNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ccc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>cccEmail<span class=\"token punctuation\">,</span> cccNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">,</span> bbb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">,</span> ccc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> followingOfAaa <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFollowing</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// console.log(followingOfAaa);</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followingOfAaa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followingOfAaa<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>following<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span>bbb<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span> ccc<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.ts</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Follow<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FollowerRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Follow<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">getFollowing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">follower<span class=\"token punctuation\">:</span> User</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> followers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      where<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> follower <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      relations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'follower'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'following'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> followers<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>getFollowing, getFollowers 메서드의 결과를 합치면 특정 유저의 followers, following을 모두 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.ts</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Follow<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FollowerRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Follow<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">getAllFollow</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">:</span> User</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> followers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFollowers</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> following <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFollowing</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>followers<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>following<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>삭제는 로직이 간단하므로 생략한다.</p>\n<p>마지막으로 client에서 followers(친구 신청) 확인 여부를 표현할 수 있도록 기능을 추가해보자.</p>\n<p>\u001bclient의 로직에 따라 한 유저 혹은 여러 유저의 신구 신청을 확인할 수 있다. 그러므로 배열을 받아 처리할 수 있도록 작성하자. 일단 테스트 코드 부터.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.test.ts</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'client에서의 follower 확인'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'follower의 일부만 확인(check: false -> true)할 수 있다.'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> aaa <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>aaaEmail<span class=\"token punctuation\">,</span> aaaNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bbb <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>bbbEmail<span class=\"token punctuation\">,</span> bbbNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> ccc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>cccEmail<span class=\"token punctuation\">,</span> cccNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> ddd <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>dddEmail<span class=\"token punctuation\">,</span> dddNickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">,</span> ddd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>bbb<span class=\"token punctuation\">,</span> ddd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">followingUser</span><span class=\"token punctuation\">(</span>ccc<span class=\"token punctuation\">,</span> ddd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> followOfDdd <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getFollowerRepository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCheckFollowers</span><span class=\"token punctuation\">(</span>ddd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n      bbb<span class=\"token punctuation\">,</span>\n      ccc<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(followOfDdd);</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followOfDdd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> followOfAaa <span class=\"token operator\">=</span> followOfDdd<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">:</span> Follow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>follower<span class=\"token punctuation\">.</span>email <span class=\"token operator\">===</span> aaaEmail\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Follow<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> followOfBbb <span class=\"token operator\">=</span> followOfDdd<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">:</span> Follow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>follower<span class=\"token punctuation\">.</span>email <span class=\"token operator\">===</span> bbbEmail\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Follow<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> followOfCcc <span class=\"token operator\">=</span> followOfDdd<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">:</span> Follow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>follower<span class=\"token punctuation\">.</span>email <span class=\"token operator\">===</span> cccEmail\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Follow<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followOfAaa<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followOfBbb<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followOfCcc<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">setCheckFollowers(d, [b, c])</code>는 d유저가 b, c 유저의 정보를 확인한 것을 표현했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// src/repository/Follow/FollowRepository.ts</span>\n\n@<span class=\"token function\">EntityRepository</span><span class=\"token punctuation\">(</span>Follow<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FollowerRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Repository</span><span class=\"token operator\">&lt;</span>Follow<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">setCheckFollowers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">me<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">,</span> followers<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> uncheckedFollowers <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUncheckedFollowers</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">,</span> followers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeFollowerCheckedToTrue</span><span class=\"token punctuation\">(</span>uncheckedFollowers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> follow <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFollowers</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> follow<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">getUncheckedFollowers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">following<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">,</span> followers<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> followerIds <span class=\"token operator\">=</span> followers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createQueryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">'follow'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoinAndSelect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'follow.follower'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'follow.following = :following'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> following<span class=\"token punctuation\">:</span> following<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">andWhere</span><span class=\"token punctuation\">(</span><span class=\"token string\">'follow.checked = false'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">andWhere</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user.id IN (:...followers)'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> followers<span class=\"token punctuation\">:</span> followerIds <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(results);</span>\n    <span class=\"token keyword\">return</span> results<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">changeFollowerCheckedToTrue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uncheckedFollowers<span class=\"token punctuation\">:</span> Follow<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> uncheckedFollowers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>f<span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(results);</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>setCheckFollowers 메서드는 2개의 메서드를 호출한다. getUncheckedFollowers 메서드는 인자로 받은 값을 조회하여 ckecked: false 인 followers 만을 반환한다.</p>\n<p>changeFollowerCheckedToTrue는 선택된 followers를 checked: true인 상태로 변경한다.</p>\n<p>checked: false 항목을 찾기 위해 Query Builder를 사용했다. TypeORM은 Query Builder가 상당히 직관적이다. Query Builder는 인자를 객체를 받는 것이 아니라 값을 받고 entitiy 명을 사용하는 것이 아니라 테이블명을 사용한다. 이 점만 주의하면 간단한 query는 쉽게 작성할 수 있다.</p>\n<p>내일은 이 코드에 GraphQL을 적용할 예정이다. 오늘은 여기까지.</p>","frontmatter":{"title":"2020-01-16 GraphQL-TypeORM 친구 신청, 수락 구현","date":"January 17, 2020"}}},"pageContext":{"slug":"/development/2020-01-16-graphql-typeorm/","previous":{"fields":{"slug":"/til/2020-01-15-til/"},"frontmatter":{"title":"2020-01-15 TIL","category":"TIL"}},"next":{"fields":{"slug":"/til/2020-01-18-til/"},"frontmatter":{"title":"2020-01-18 TIL","category":"TIL"}}}}}