{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-03-04-using-path-alias-in-typescript/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"44de3e3b-ca97-542b-8e3f-5dde51ae32c6","excerpt":"TypeScript, GraphQL, TypeORM으로 작은 프로젝트를 진행하고 있다. TypeScript에서 import를 할 때 기본적으로 상대경로를 이용한다. 이 상대경로가 너무 지저분해 보여서 좋은 방법이 없을까 하고 검색을 해봤다. 검색 결과 주로 front 관련 내용들이 많이 나왔다. Webpack이나 Babel을 이용하여 이 문제를 해결하고 있었다. backend에 굳이 Webpack이나 Babel을 이용할 필요는 없을 것 같아서 몇 번 더 검색하다가 다음 글을 발견했다. Path…","html":"<p>TypeScript, GraphQL, TypeORM으로 작은 프로젝트를 진행하고 있다.</p>\n<p>TypeScript에서 import를 할 때 기본적으로 상대경로를 이용한다.</p>\n<p>이 상대경로가 너무 지저분해 보여서 좋은 방법이 없을까 하고 검색을 해봤다.</p>\n<p>검색 결과 주로 front 관련 내용들이 많이 나왔다. Webpack이나 Babel을 이용하여 이 문제를 해결하고 있었다.</p>\n<p>backend에 굳이 Webpack이나 Babel을 이용할 필요는 없을 것 같아서 몇 번 더 검색하다가 다음 글을 발견했다.</p>\n<p><a href=\"https://dev.to/larswaechter/path-aliases-with-typescript-in-nodejs-4353\">Path aliases with TypeScript in Node.js</a></p>\n<p>상대경로를 다르게 변경하는 것을 <code class=\"language-text\">Path alias</code>라고 부르는가보다.</p>\n<p>Path alias를 적용하면 다음과 같이 처리할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 적용 전</span>\n<span class=\"token keyword\">import</span> Chat <span class=\"token keyword\">from</span> <span class=\"token string\">'../../../entities/Chat'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 적용 후</span>\n<span class=\"token keyword\">import</span> Chat <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/entities/Chat'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"적용-방법\"><a href=\"#%EC%A0%81%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"적용 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>적용 방법</h2>\n<p>프로젝트 폴더 구조는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">├── dist\n└── src\n    ├── api\n    │   ├── Chat\n    │   ├── User\n    ├── entities\n    ├── types\n    └── utils</code></pre></div>\n<p>dist는 컴파일 된 js 파일이 저장되는 폴더다.</p>\n<h3 id=\"1-tsconfigjoin-설정-추가\"><a href=\"#1-tsconfigjoin-%EC%84%A4%EC%A0%95-%EC%B6%94%EA%B0%80\" aria-label=\"1 tsconfigjoin 설정 추가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. tsconfig.join 설정 추가</h3>\n<p>먼저 <code class=\"language-text\">tsconfig.json</code>에 baseUrl과 Paths가 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"compilerOptions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"baseUrl\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"paths\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"@src/*\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"src/*\"</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>나는 소스 코드의 최상위 경로인 src를 선택했지만 하위 경로를 선택하는 것도 가능하고 개별적으로 하위의 여러 폴더를 선택할 수도 있다.</p>\n<h3 id=\"2-module-alias-package-설치\"><a href=\"#2-module-alias-package-%EC%84%A4%EC%B9%98\" aria-label=\"2 module alias package 설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. module-alias package 설치</h3>\n<p><a href=\"https://www.npmjs.com/package/module-alias\">module-alias</a>를 설치한다.</p>\n<p>설치 후 package.json 파일에 다음의 코드를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token string\">\"_moduleAliases\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"@src\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"dist\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h3 id=\"3-indexts-파일에-import-추가\"><a href=\"#3-indexts-%ED%8C%8C%EC%9D%BC%EC%97%90-import-%EC%B6%94%EA%B0%80\" aria-label=\"3 indexts 파일에 import 추가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. index.ts 파일에 import 추가</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token string\">'module-alias/register'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"테스트\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"테스트 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트</h2>\n<p>tsc 명령으로 ts 파일을 js 파일로 변환해보자.</p>\n<p>변환 후 동일한 js 파일을 확인해보면 다음과 같이 코드가 변경되어 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> Chat_1 <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@src/entities/Chat'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">node dist<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>js</code></pre></div>\n<p>위와 같이 해당 파일을 직접 실행해도 오류가 발생하지 않는다.</p>\n<h2 id=\"scripts\"><a href=\"#scripts\" aria-label=\"scripts permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scripts</h2>\n<p>scripts를 다음과 같이 수정해서 사용 중이다. nodemon을 사용하기 위해 <code class=\"language-text\">watch</code> 항목을 추가했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=development node dist/index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"watch\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon --exec \\\"yarn build &amp;&amp; yarn dev\\\" --watch src -e ts,graphql\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"prebuild\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf dist\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=production node dist/index.js\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"eslint-적용\"><a href=\"#eslint-%EC%A0%81%EC%9A%A9\" aria-label=\"eslint 적용 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint 적용</h2>\n<p><code class=\"language-text\">tsconfig.json</code>에 paths를 설정하면 ts 오류는 해결되는데 eslint 오류는 그대로 남아있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">Unable to resolve path to <span class=\"token keyword\">module</span> <span class=\"token string\">'@src/entities/Chat'</span><span class=\"token punctuation\">.</span><span class=\"token function\">eslint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">import</span><span class=\"token operator\">/</span>no<span class=\"token operator\">-</span>unresolved<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 오류를 없애려면 <code class=\"language-text\">eslint-import-resolver-typescript</code> package를 설치하고 <code class=\"language-text\">.eslintrc.js</code> 파일에 다음의 항목을 추가하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">settings<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'import/resolver'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    typescript<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// this loads &lt;rootdir>/tsconfig.json to eslint</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>","frontmatter":{"title":"Path alias를 사용하여 TypeScript import 경로 깔끔하게 만들기","date":"March 04, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/development/2020-03-04-using-path-alias-in-typescript/","previous":{"fields":{"slug":"/algorithm/2020-02-29-counttwochars/"},"frontmatter":{"title":"문자열에서 주어진 문자 갯수 세기","category":"algorithm"}},"next":{"fields":{"slug":"/development/2020-03-07-react-router/"},"frontmatter":{"title":"React Router 간단 정리","category":"development"}}}}}