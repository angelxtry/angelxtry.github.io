{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-02-12-vscode-typescript-debugging/","result":{"data":{"site":{"siteMetadata":{"title":"TIL","author":"[Suho]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"angelxtry/blog-comment"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"91f9ea56-ba40-5e9f-be8d-7d2da9d7a155","excerpt":"알고리즘 문제를 풀다가 재귀가 알쏭달쏭해서 debugging을 해보고 싶었다. VSCode에서 좌측의 벌레(?) 아이콘을 누르거나 맥 기준으로 (Shift + Command + D)를 누르고 Debug with Node.js를 선택한다. 해당 프로젝트에서 처음 debugging을 시도하면  파일을 작성하라는 팝업창이 생긴다. Open launch.json을 선택하면 해당 폴더에  이 생성된다. 나머지는 모두 자동 생성된 코드이고 직접 작성한 것은 ,  2가지다. program은 entry…","html":"<p>알고리즘 문제를 풀다가 재귀가 알쏭달쏭해서 debugging을 해보고 싶었다.</p>\n<p>VSCode에서 좌측의 벌레(?) 아이콘을 누르거나 맥 기준으로 (Shift + Command + D)를 누르고 Debug with Node.js를 선택한다.</p>\n<p>해당 프로젝트에서 처음 debugging을 시도하면 <code class=\"language-text\">launch.json</code> 파일을 작성하라는 팝업창이 생긴다.</p>\n<p>Open launch.json을 선택하면 해당 폴더에 <code class=\"language-text\">.vscode/launch.json</code> 이 생성된다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Launch Program\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"skipFiles\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;node_internals>/**\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceFolder}/allAnagram/allAnagram.ts\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token property\">\"preLaunchTask\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc: build - tsconfig.json\"</span><span class=\"token punctuation\">,</span></span>      <span class=\"token property\">\"outFiles\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"${workspaceFolder}/**/*.js\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>나머지는 모두 자동 생성된 코드이고 직접 작성한 것은 <code class=\"language-text\">program</code>, <code class=\"language-text\">preLaunchTask</code> 2가지다.</p>\n<p>program은 entry point가 되는 파일을 선택하면 된다.</p>\n<p>preLaunckTask는 내가 선택한 파일이 Typescript이므로 tsc를 입력한다.</p>\n<p>debugging을 위해서는 tsconfig.json 파일에서 <code class=\"language-text\">&quot;sourceMap&quot;: true</code> 옵션을 추가해야 한다.</p>\n<p>해당 옵션을 추가하면 xxx.js.map 이라는 파일이 생성된다.</p>\n<p>sourcemap은 ts 파일이 js 파일로 변환되었을 때 ts 코드가 어떤 js 코드로 변환되었는지 확인할 수 있도록 해주는 파일이다.</p>\n<p>여기까지 설정하면 VSCode에서 debugging이 잘 진행된다.</p>","frontmatter":{"title":"VSCode Typescript Debugging","date":"February 12, 2020"}}},"pageContext":{"slug":"/development/2020-02-12-vscode-typescript-debugging/","previous":{"fields":{"slug":"/til/2020-02-11-til/"},"frontmatter":{"title":"2020-02-11 TIL","category":"til"}},"next":{"fields":{"slug":"/algorithm/2020-02-13-shuffle-cards/"},"frontmatter":{"title":"Shuffle Cards","category":"algorithm"}}}}}